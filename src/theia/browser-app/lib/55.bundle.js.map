{"version":3,"sources":["webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflict-resolver.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflict.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflicts-code-lense-provider.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflicts-decorations.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflicts-frontend-contribution.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflicts-frontend-module.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflicts-parser.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/merge-conflicts-provider.ts","webpack:///../node_modules/@theia/merge-conflicts/src/browser/style/index.css?035c","webpack:///../node_modules/@theia/merge-conflicts/src/browser/style/index.css"],"names":[],"mappings":"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","file":"55.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { TextEdit, TextDocument, Range } from '@theia/languages/lib/browser';\nimport { CommandHandler } from '@theia/core/lib/common';\nimport { MergeConflictCommandArgument, MergeConflict } from './merge-conflict';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class MergeConflictResolver {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    readonly acceptCurrent: CommandHandler = {\n        execute: args => this.doAcceptCurrent(args)\n    };\n\n    readonly acceptIncoming: CommandHandler = {\n        execute: args => this.doAcceptIncoming(args)\n    };\n\n    readonly acceptBoth: CommandHandler = {\n        execute: args => this.doAcceptBoth(args)\n    };\n\n    protected doAcceptCurrent(argument: MergeConflictCommandArgument): void {\n        this.doAccept(argument, (textOfRange, conflict) =>\n            textOfRange(conflict.current.content!));\n    }\n\n    protected doAcceptIncoming(argument: MergeConflictCommandArgument): void {\n        this.doAccept(argument, (textOfRange, conflict) =>\n            textOfRange(conflict.incoming.content!));\n    }\n\n    protected doAcceptBoth(argument: MergeConflictCommandArgument): void {\n        this.doAccept(argument, (textOfRange, conflict) => {\n            const currentText = textOfRange(conflict.current.content);\n            const incomingText = textOfRange(conflict.incoming.content);\n            return `${currentText}\\n${incomingText}`;\n        });\n    }\n\n    protected async doAccept(argument: MergeConflictCommandArgument,\n        newTextFn: ((textOfRange: (range: Range | undefined) => string, conflict: MergeConflict) => string)): Promise<void> {\n        const { uri, conflict } = argument;\n        const editorWidget = await this.editorManager.getByUri(new URI(uri));\n        if (!editorWidget) {\n            return;\n        }\n        const newText = newTextFn(range => this.getTextRange(range, editorWidget.editor.document), conflict);\n        editorWidget.editor.executeEdits([TextEdit.replace(conflict.total!, newText)]);\n    }\n\n    protected getTextRange(range: Range | undefined, document: TextDocument): string {\n        if (!range) {\n            return '';\n        }\n        const start = document.offsetAt(range.start);\n        const end = document.offsetAt(range.end);\n        const text = document.getText().substring(start, end);\n        return text;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Range } from '@theia/languages/lib/browser';\nimport { Command } from '@theia/core/lib/common';\n\nexport interface MarkedRegion {\n    marker?: Range;\n    content?: Range;\n}\n\nexport interface MergeConflict {\n    total?: Range;\n    current: MarkedRegion;\n    incoming: MarkedRegion;\n    bases: MarkedRegion[];\n}\n\nexport interface MergeConflictCommandArgument {\n    uri: string;\n    conflict: MergeConflict;\n}\n\nexport namespace MergeConflictsCommands {\n    export const MERGE_CONFLICT_PREFIX = 'Merge Conflict';\n    export const AcceptCurrent: Command = {\n        id: 'merge-conflicts:accept.current',\n        category: MERGE_CONFLICT_PREFIX,\n        label: 'Accept Current Change'\n    };\n    export const AcceptIncoming: Command = {\n        id: 'merge-conflicts:accept.incoming',\n        category: MERGE_CONFLICT_PREFIX,\n        label: 'Accept Incoming Change'\n    };\n    export const AcceptBoth: Command = {\n        id: 'merge-conflicts:accept.both',\n        category: MERGE_CONFLICT_PREFIX,\n        label: 'Accept Both Changes'\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { CodeLensProvider, CodeLensParams, CodeLens, CancellationToken } from '@theia/languages/lib/browser';\nimport { MergeConflictsProvider } from './merge-conflicts-provider';\nimport { MergeConflict, MergeConflictsCommands as Commands, MergeConflictCommandArgument } from './merge-conflict';\n\n@injectable()\nexport class MergeConflictsCodeLensProvider implements CodeLensProvider {\n\n    @inject(MergeConflictsProvider)\n    protected readonly mergeConflictsProvider: MergeConflictsProvider;\n\n    async provideCodeLenses(params: CodeLensParams, token: CancellationToken): Promise<CodeLens[]> {\n        const uri = params.textDocument.uri;\n        const mergeConflicts = await this.mergeConflictsProvider.get(uri);\n        const result: CodeLens[] = [];\n        if (mergeConflicts) {\n            mergeConflicts.forEach(mergeConflict => result.push(...this.toCodeLense(uri, mergeConflict)));\n        }\n        return Promise.resolve(result);\n    }\n\n    protected toCodeLense(uri: string, conflict: MergeConflict): CodeLens[] {\n        const result: CodeLens[] = [];\n        for (const cmd of [Commands.AcceptCurrent, Commands.AcceptIncoming, Commands.AcceptBoth]) {\n            result.push({\n                command: {\n                    command: cmd.id,\n                    title: cmd.label || '',\n                    arguments: [<MergeConflictCommandArgument>{ uri, conflict }]\n                },\n                range: conflict.current.marker!\n            });\n        }\n        return result;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { OverviewRulerLane, EditorDecoration, EditorDecorationOptions, EditorDecorator } from '@theia/editor/lib/browser';\nimport { MergeConflictsUpdate } from './merge-conflicts-provider';\n\n@injectable()\nexport class MergeConflictsDecorations extends EditorDecorator {\n\n    decorate(params: MergeConflictsUpdate): void {\n        const mergeConflicts = params.mergeConflicts;\n        const newDecorations: EditorDecoration[] = [];\n        for (const mergeConflict of mergeConflicts) {\n            newDecorations.push({ range: mergeConflict.current.marker!, options: MergeConflictsDecorations.Options.CurrentMarker });\n            if (mergeConflict.current.content) {\n                newDecorations.push({ range: mergeConflict.current.content!, options: MergeConflictsDecorations.Options.CurrentContent });\n            }\n            newDecorations.push({ range: mergeConflict.incoming.marker!, options: MergeConflictsDecorations.Options.IncomingMarker });\n            if (mergeConflict.incoming.content) {\n                newDecorations.push({ range: mergeConflict.incoming.content!, options: MergeConflictsDecorations.Options.IncomingContent });\n            }\n            for (const base of mergeConflict.bases) {\n                if (base.marker) {\n                    newDecorations.push({ range: base.marker, options: MergeConflictsDecorations.Options.BaseMarker });\n                }\n                if (base.content) {\n                    newDecorations.push({ range: base.content, options: MergeConflictsDecorations.Options.BaseContent });\n                }\n            }\n        }\n        this.setDecorations(params.editor, newDecorations);\n    }\n\n}\n\nexport namespace MergeConflictsDecorations {\n\n    export const Options = {\n        CurrentMarker: <EditorDecorationOptions>{\n            isWholeLine: true,\n            className: 'merge-conflict-current-marker'\n        },\n        CurrentContent: <EditorDecorationOptions>{\n            isWholeLine: true,\n            className: 'merge-conflict-current-content',\n            overviewRuler: {\n                position: OverviewRulerLane.Full,\n                color: 'editorOverviewRuler.currentContentForeground',\n            }\n        },\n        BaseMarker: <EditorDecorationOptions>{\n            isWholeLine: true,\n            className: 'merge-conflict-base-marker'\n        },\n        BaseContent: <EditorDecorationOptions>{\n            isWholeLine: true,\n            className: 'merge-conflict-base-content',\n            overviewRuler: {\n                position: OverviewRulerLane.Full,\n                color: 'editorOverviewRuler.commonContentForeground',\n            }\n        },\n        IncomingMarker: <EditorDecorationOptions>{\n            isWholeLine: true,\n            className: 'merge-conflict-incoming-marker'\n        },\n        IncomingContent: <EditorDecorationOptions>{\n            isWholeLine: true,\n            className: 'merge-conflict-incoming-content',\n            overviewRuler: {\n                position: OverviewRulerLane.Full,\n                color: 'editorOverviewRuler.incomingContentForeground',\n            }\n        },\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { FrontendApplication, FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { CommandContribution, CommandRegistry } from '@theia/core/lib/common';\nimport { Languages } from '@theia/languages/lib/browser';\nimport { MergeConflictsCodeLensProvider } from './merge-conflicts-code-lense-provider';\nimport { MergeConflictResolver } from './merge-conflict-resolver';\nimport { MergeConflictsCommands as Commands } from './merge-conflict';\nimport { MergeConflictsProvider } from './merge-conflicts-provider';\nimport { MergeConflictsDecorations } from './merge-conflicts-decorations';\n\n@injectable()\nexport class MergeConflictsFrontendContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(Languages)\n    protected readonly languages: Languages;\n\n    @inject(MergeConflictsCodeLensProvider)\n    protected readonly mergeConflictsCodeLensProvider: MergeConflictsCodeLensProvider;\n\n    @inject(MergeConflictResolver)\n    protected readonly mergeConflictResolver: MergeConflictResolver;\n\n    @inject(MergeConflictsDecorations)\n    protected readonly decorator: MergeConflictsDecorations;\n\n    @inject(MergeConflictsProvider)\n    protected readonly mergeConflictsProvider: MergeConflictsProvider;\n\n    onStart(app: FrontendApplication): void {\n        if (this.languages.registerCodeLensProvider) {\n            this.languages.registerCodeLensProvider([{ pattern: '**/*' }], this.mergeConflictsCodeLensProvider);\n        }\n        this.mergeConflictsProvider.onDidUpdate(params => this.decorator.decorate(params));\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand({ id: Commands.AcceptCurrent.id }, this.mergeConflictResolver.acceptCurrent);\n        registry.registerCommand({ id: Commands.AcceptIncoming.id }, this.mergeConflictResolver.acceptIncoming);\n        registry.registerCommand({ id: Commands.AcceptBoth.id }, this.mergeConflictResolver.acceptBoth);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { CommandContribution } from '@theia/core/lib/common';\nimport { MergeConflictsFrontendContribution } from './merge-conflicts-frontend-contribution';\nimport { MergeConflictsCodeLensProvider } from './merge-conflicts-code-lense-provider';\nimport { MergeConflictsParser } from './merge-conflicts-parser';\nimport { MergeConflictResolver } from './merge-conflict-resolver';\nimport { MergeConflictsProvider } from './merge-conflicts-provider';\nimport { MergeConflictsDecorations } from './merge-conflicts-decorations';\n\nimport '../../src/browser/style/index.css';\n\nexport default new ContainerModule(bind => {\n    bind(MergeConflictsParser).toSelf().inSingletonScope();\n    bind(MergeConflictResolver).toSelf().inSingletonScope();\n    bind(MergeConflictsCodeLensProvider).toSelf().inSingletonScope();\n    bind(MergeConflictsDecorations).toSelf().inSingletonScope();\n    bind(MergeConflictsFrontendContribution).toSelf().inSingletonScope();\n    bind(MergeConflictsProvider).toSelf().inSingletonScope();\n    [CommandContribution, FrontendApplicationContribution].forEach(serviceIdentifier =>\n        bind(serviceIdentifier).toService(MergeConflictsFrontendContribution)\n    );\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { MergeConflict } from './merge-conflict';\nimport { Range } from '@theia/editor/lib/browser';\n\n@injectable()\nexport class MergeConflictsParser {\n    private parser: MergeConflictsParser.StateMachine<MergeConflictsParser.Context>;\n\n    constructor() {\n        this.init();\n    }\n\n    parse(input: MergeConflictsParser.Input): MergeConflict[] {\n        const context = new MergeConflictsParser.Context();\n        this.parser.reset(context);\n        for (let number = 0; number < input.lineCount; number++) {\n            this.parser.read({ number, content: input.getLine(number) });\n        }\n        return context.all;\n    }\n\n    private init(): void {\n        const parser = this.parser = new MergeConflictsParser.StateMachine(new MergeConflictsParser.Context());\n        // states\n        const start = parser.addState('start');\n        const currentMarker = parser.addState('current-marker');\n        const currentContent = parser.addState('current-content');\n        const baseMarker = parser.addState('base-marker');\n        const baseContent = parser.addState('base-content');\n        const separator = parser.addState('separator');\n        const incomingContent = parser.addState('incoming-content');\n        const incomingMarker = parser.addState('incoming-marker');\n        const push = parser.addState('push');\n\n        // conditions / triggers\n        const createStartsWithCondition: (char: string) => ((input: string) => boolean) = (char: string) => {\n            const re = new RegExp(`^${char}{7}`);\n            return (input: string) => {\n                if (input.length < 7) {\n                    return false;\n                }\n                return re.test(input);\n            };\n        };\n        const startsWithLt = createStartsWithCondition('<');\n        const startsWithEq = createStartsWithCondition('=');\n        const startsWithGt = createStartsWithCondition('>');\n        const startsWithPp = createStartsWithCondition('\\\\|');\n        const any = () => true;\n\n        // transitions\n        start.to(currentMarker, startsWithLt);\n        start.to(start, any);\n        currentMarker.to(currentMarker, startsWithLt);\n        currentMarker.to(separator, startsWithEq);\n        currentMarker.to(baseMarker, startsWithPp);\n        currentMarker.to(currentContent, any);\n        currentContent.to(currentMarker, startsWithLt);\n        currentContent.to(separator, startsWithEq);\n        currentContent.to(baseMarker, startsWithPp);\n        currentContent.to(start, startsWithGt);\n        currentContent.to(currentContent, any);\n        baseMarker.to(currentMarker, startsWithLt);\n        baseMarker.to(baseMarker, startsWithPp);\n        baseMarker.to(separator, startsWithEq);\n        baseMarker.to(baseContent, any);\n        baseContent.to(currentMarker, startsWithLt);\n        baseContent.to(separator, startsWithEq);\n        baseContent.to(baseMarker, startsWithPp);\n        baseContent.to(baseContent, any);\n        separator.to(currentMarker, startsWithLt);\n        separator.to(start, startsWithEq);\n        separator.to(incomingMarker, startsWithGt);\n        separator.to(incomingContent, any);\n        incomingContent.to(start, startsWithEq);\n        incomingContent.to(currentMarker, startsWithLt);\n        incomingContent.to(incomingMarker, startsWithGt);\n        incomingContent.to(incomingContent, any);\n        incomingMarker.to(push);\n        push.to(start);\n\n        // actions\n        currentMarker.onEnter = (input, ctx) => {\n            ctx.new = new MergeConflictsParser.Context().new;\n            ctx.new.current.marker = this.lineToRange(input);\n        };\n        currentContent.onEnter = (input, ctx) => {\n            const current = ctx.new.current;\n            current.content = this.addLineToRange(input, current.content);\n        };\n        baseMarker.onEnter = (input, ctx) => {\n            ctx.new.bases.push({ marker: this.lineToRange(input) });\n        };\n        baseContent.onEnter = (input, ctx) => {\n            const base = ctx.new.bases.slice(-1)[0];\n            base.content = this.addLineToRange(input, base.content);\n        };\n        incomingContent.onEnter = (input, ctx) => {\n            const incoming = ctx.new.incoming;\n            incoming.content = this.addLineToRange(input, incoming.content);\n        };\n        incomingMarker.onEnter = (input, ctx) => {\n            const markerRange = this.lineToRange(input);\n            ctx.new.incoming.marker = markerRange;\n            ctx.new.total = {\n                start: ctx.new.current.marker!.start,\n                end: markerRange.end\n            };\n        };\n        push.onEnter = (input, ctx) => {\n            ctx.all.push(ctx.new);\n        };\n    }\n\n    private lineToRange(line: MergeConflictsParser.Line): Range {\n        return {\n            start: { line: line.number, character: 0 },\n            end: { line: line.number, character: line.content.length },\n        };\n    }\n\n    private addLineToRange(line: MergeConflictsParser.Line, range: Range | undefined): Range {\n        if (!range) {\n            return this.lineToRange(line);\n        }\n        range.end = { line: line.number, character: line.content.length };\n        return range;\n    }\n}\n\nexport namespace MergeConflictsParser {\n\n    export interface Input {\n        readonly lineCount: number;\n        getLine(lineNumber: number): string;\n    }\n\n    export class Context {\n        new: MergeConflict = {\n            current: {},\n            incoming: {},\n            bases: []\n        };\n        all: MergeConflict[] = [];\n    }\n\n    export interface Line {\n        number: number;\n        content: string;\n    }\n\n    export class StateMachine<C extends object> {\n        current: State<C>;\n        readonly states: State<C>[] = [];\n\n        constructor(protected context: C) { }\n\n        reset(context: C): void {\n            this.current = this.states[0];\n            this.context = context;\n        }\n\n        read(line: Line): void {\n            let next = this.current.findNext(line, this.context);\n            while (next) {\n                if (next.onEnter) {\n                    next.onEnter(line, this.context);\n                }\n                if (next.immediateNext) {\n                    this.current = next;\n                    next = next.immediateNext;\n                } else {\n                    break;\n                }\n            }\n            if (!next) {\n                throw new Error(`Missing transition from (${this.current.id}) for input: L.${line.number} > ${line.content}`);\n            }\n            this.current = next;\n        }\n\n        addState(id: string): State<C> {\n            const state = new State<C>(id);\n            this.states.push(state);\n            if (!this.current) {\n                this.current = state;\n            }\n            return state;\n        }\n    }\n\n    export class State<C> {\n        onEnter?: (line: Line, context: C) => void;\n        readonly conditionalNext: { to: State<C>, condition: (line: string) => boolean }[] = [];\n        immediateNext: State<C> | undefined;\n\n        constructor(readonly id: string) { }\n\n        findNext(line: Line, context: C): State<C> | undefined {\n            for (const candidate of this.conditionalNext) {\n                if (candidate.condition(line.content)) {\n                    return candidate.to;\n                }\n            }\n            return undefined;\n        }\n\n        to(next: State<C>, condition?: (line: string) => boolean): void {\n            if (condition) {\n                this.immediateNext = undefined;\n                this.conditionalNext.push({ to: next, condition });\n            } else {\n                this.immediateNext = next;\n            }\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { MergeConflict } from './merge-conflict';\nimport { TextEditor, EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { Emitter, Event } from '@theia/core';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { MergeConflictsParser } from './merge-conflicts-parser';\n\nimport debounce = require('lodash.debounce');\n\n@injectable()\nexport class MergeConflictsProvider {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(MergeConflictsParser)\n    protected readonly mergeConflictParser: MergeConflictsParser;\n\n    protected readonly onDidUpdateEmitter = new Emitter<MergeConflictsUpdate>();\n    readonly onDidUpdate: Event<MergeConflictsUpdate> = this.onDidUpdateEmitter.event;\n\n    protected values = new Map<string, Promise<MergeConflict[]>>();\n    protected valueTimeouts = new Map<string, number>();\n\n    @postConstruct()\n    protected initialize(): void {\n        this.editorManager.onCreated(w => this.handleNewEditor(w));\n    }\n\n    get(uri: string): Promise<MergeConflict[] | undefined> {\n        return this.values.get(uri) || Promise.resolve(undefined);\n    }\n\n    protected handleNewEditor(editorWidget: EditorWidget): void {\n        const editor = editorWidget.editor;\n        const uri = editor.uri;\n        if (uri.scheme !== 'file') {\n            return;\n        }\n        const debouncedUpdate = debounce(() => this.updateMergeConflicts(editor), 200, { leading: true });\n        const disposable = editor.onDocumentContentChanged(() => debouncedUpdate());\n        editorWidget.disposed.connect(() => disposable.dispose());\n        debouncedUpdate();\n    }\n\n    protected updateMergeConflicts(editor: TextEditor): void {\n        const uri = editor.uri.toString();\n        if (this.valueTimeouts.has(uri)) {\n            window.clearTimeout(this.valueTimeouts.get(uri));\n        }\n        const deferred = new Deferred<MergeConflict[]>();\n        this.values.set(uri, deferred.promise);\n        window.setTimeout(() => {\n            const mergeConflicts = this.computeMergeConflicts(editor);\n            this.onDidUpdateEmitter.fire({ editor, mergeConflicts });\n            deferred.resolve(mergeConflicts);\n        }, 50);\n        this.valueTimeouts.set(uri, window.setTimeout(() => {\n            this.values.delete(uri);\n        }, 1000));\n    }\n\n    protected computeMergeConflicts(editor: TextEditor): MergeConflict[] {\n        const document = editor.document;\n        const input = <MergeConflictsParser.Input>{\n            lineCount: document.lineCount,\n            getLine: number => document.getLineContent(number + 1),\n        };\n        return this.mergeConflictParser.parse(input);\n    }\n\n}\n\nexport interface MergeConflictsUpdate {\n    readonly editor: TextEditor;\n    readonly mergeConflicts: MergeConflict[];\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.merge-conflict-current-marker {\\n     background-color: var(--theia-merge-currentHeaderBackground);\\n}\\n\\n.merge-conflict-current-content {\\n     background-color: var(--theia-merge-currentContentBackground);\\n}\\n\\n.merge-conflict-base-marker {\\n    background-color: var(--theia-merge-commonHeaderBackground);\\n}\\n\\n.merge-conflict-base-content {\\n    background-color: var(--theia-merge-commonContentBackground);\\n}\\n\\n.merge-conflict-incoming-marker {\\n    background-color: var(--theia-merge-incomingHeaderBackground);\\n}\\n\\n.merge-conflict-incoming-content {\\n    background-color: var(--theia-merge-incomingContentBackground);\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}