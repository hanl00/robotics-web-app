{"version":3,"sources":["webpack:////home/nicholas/Documents/node_modules/@theia/languages/src/browser/index.ts","webpack:////home/nicholas/Documents/node_modules/@theia/monaco/src/browser/textmate/index.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/data/Tcl.plist","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/bat.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/clojure.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/coffeescript.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/cpp.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/csharp.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/css.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/fsharp.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/go.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/groovy.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/handlebars.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/hlsl.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/html.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/ini.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/java.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/js.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/json.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/jsx-tags.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/less.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/log.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/lua.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/make.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/markdown.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/objective-c.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/perl.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/php.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/powershell.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/pug.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/python.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/r.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/razor.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/rust.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/scss.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/shaderlab.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/shell.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/sql.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/swift.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/tcl.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/textmate-grammars-frontend-module.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/ts.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/vb.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/xml.ts","webpack:////home/nicholas/Documents/node_modules/@theia/textmate-grammars/src/browser/xsl.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;AAElF,qJAA2C;AAC3C,mJAA0C;AAC1C,6JAA+C;AAC/C,mKAAkD;AAClD,uJAA4C;;;;;;;;;;;;;;ACpB5C;;;;;;;;;;;;;;kFAckF;;;;;AAElF,6IAAoC;AACpC,qJAAwC;AACxC,yJAA0C;AAC1C,6KAAoD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBpD,iBAAiB,qBAAuxC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,kBAAkB,CAAC;IA8C5C,CAAC;IA5CG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YAC5B,OAAO,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;SAC5B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,KAAK;aACrB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;oBACjD,GAAG,EAAE,IAAI,MAAM,CAAC,iCAAiC,CAAC;iBACrD;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAhDQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAiD3B;IAAD,sBAAC;CAAA;AAjDY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,SAAS,CAAC;QACf,cAAS,GAAG,gBAAgB,CAAC;IA4C1C,CAAC;IA1CG,sDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;YAC9C,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;SAClC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;aACnB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE,IAAI;aAChB;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,0HAAoC,CAAC,CAAC;QAC9D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA9CQ,mBAAmB;QAD/B,sBAAU,EAAE;OACA,mBAAmB,CA+C/B;IAAD,0BAAC;CAAA;AA/CY,kDAAmB;;;;;;;;;;;;;;ACpBhC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,cAAc,CAAC;QACpB,cAAS,GAAG,eAAe,CAAC;IAmDzC,CAAC;IAjDG,2DAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;YACrC,OAAO,EAAE,CAAC,cAAc,EAAE,cAAc,CAAC;SAC5C,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;gBAChB,YAAY,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;aAC/B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,iBAAiB,CAAC;oBACpC,GAAG,EAAE,IAAI,MAAM,CAAC,oBAAoB,CAAC;iBACxC;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,oIAAyC,CAAC,CAAC;QACnE,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IArDQ,wBAAwB;QADpC,sBAAU,EAAE;OACA,wBAAwB,CAsDpC;IAAD,+BAAC;CAAA;AAtDY,4DAAwB;;;;;;;;;;;;;;ACpBrC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,kBAAa,GAAG,GAAG,CAAC;QACpB,oBAAe,GAAG,KAAK,CAAC;QACxB,sBAAiB,GAAG,OAAO,CAAC;QAE5B,WAAM,GAA2C;YACtD,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACzD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;aAClD;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,2BAA2B,CAAC;oBAC9C,GAAG,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;iBAClD;aACJ;SACJ,CAAC;IAoDN,CAAC;IAlDG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,aAAa;YACtB,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;SACtB,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE3E,IAAM,eAAe,GAAG,mBAAO,CAAC,4HAAqC,CAAC,CAAC;QACvE,QAAQ,CAAC,4BAA4B,CAAC,mBAAmB,EAAE;YACjD,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,eAAe;6BAC3B,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,IAAM,QAAQ,GAAG,mBAAO,CAAC,8GAA8B,CAAC,CAAC;QACzD,QAAQ,CAAC,4BAA4B,CAAC,UAAU,EAAE;YACxC,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,QAAQ;6BACpB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QAExE,MAAM;QACN,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,eAAe;YACxB,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC;YAC9F,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;SACjC,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7E,IAAM,UAAU,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC7D,QAAQ,CAAC,4BAA4B,CAAC,YAAY,EAAE;YAC1C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,UAAU;6BACtB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;IAxFQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAyF3B;IAAD,sBAAC;CAAA;AAzFY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,QAAQ,CAAC;QACd,cAAS,GAAG,WAAW,CAAC;IAoDrC,CAAC;IAlDG,qDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC;SACtC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACzD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;aACjD;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,iBAAiB,CAAC;oBACpC,GAAG,EAAE,IAAI,MAAM,CAAC,oBAAoB,CAAC;iBACxC;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,wHAAmC,CAAC,CAAC;QAC7D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAtDQ,kBAAkB;QAD9B,sBAAU,EAAE;OACA,kBAAkB,CAuD9B;IAAD,yBAAC;CAAA;AAvDY,gDAAkB;;;;;;;;;;;;;;ACpB/B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,YAAY,CAAC;IAwDtC,CAAC;IAtDG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,CAAC;YACpB,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;YACvB,SAAS,EAAE,CAAC,UAAU,CAAC;SAC1B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,WAAW,EAAE,yDAAyD;YAEtE,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YAED,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YAED,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;aAC5D;YAED,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YAED,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,8CAA8C,CAAC;oBACjE,GAAG,EAAE,IAAI,MAAM,CAAC,sCAAsC,CAAC;iBAC1D;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA1DQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CA2D3B;IAAD,sBAAC;CAAA;AA3DY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,QAAQ,CAAC;QACd,cAAS,GAAG,eAAe,CAAC;IAkDzC,CAAC;IAhDG,qDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC;YAChD,OAAO,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC;SACtC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;aAC/C;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE;oBACL,OAAO,EAAE,IAAI,MAAM,CAAC,wDAAwD,CAAC;oBAC7E,KAAK,EAAE,IAAI,MAAM,CAAC,8DAA8D,CAAC;iBACpF;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,wHAAmC,CAAC,CAAC;QAC7D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IApDQ,kBAAkB;QAD9B,sBAAU,EAAE;OACA,kBAAkB,CAqD9B;IAAD,yBAAC;CAAA;AArDY,gDAAkB;;;;;;;;;;;;;;ACpB/B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAEa,OAAE,GAAG,IAAI,CAAC;QACV,WAAM,GAA2C;YACtD,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5C,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;aAC5D;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,qBAAqB,EAAE,IAAI,MAAM,CAAC,6GAA6G,CAAC;gBAChJ,qBAAqB,EAAE,IAAI,MAAM,CAAC,0DAA0D,CAAC;aAChG;SACJ,CAAC;IAsBN,CAAC;IApBG,iDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;SACxB,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhE,IAAM,SAAS,GAAG,mBAAO,CAAC,gHAA+B,CAAC,CAAC;QAC3D,QAAQ,CAAC,4BAA4B,CAAC,WAAW,EAAE;YACzC,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,SAAS;6BACrB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IArDQ,cAAc;QAD1B,sBAAU,EAAE;OACA,cAAc,CAsD1B;IAAD,qBAAC;CAAA;AAtDY,wCAAc;;;;;;;;;;;;;;ACpB3B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,QAAQ,CAAC;QACd,cAAS,GAAG,eAAe,CAAC;IA8CzC,CAAC;IA5CG,qDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC;YAC1C,SAAS,EAAE,CAAC,aAAa,CAAC;YAC1B,SAAS,EAAE,mBAAmB;SACjC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,wHAAmC,CAAC,CAAC;QAC7D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAhDQ,kBAAkB;QAD9B,sBAAU,EAAE;OACA,kBAAkB,CAiD9B;IAAD,yBAAC;CAAA;AAjDY,gDAAkB;;;;;;;;;;;;;;ACpB/B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,YAAY,CAAC;QAClB,cAAS,GAAG,sBAAsB,CAAC;IA4ChD,CAAC;IA1CG,yDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,MAAM,CAAC;YAC3C,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;YACrC,SAAS,EAAE,CAAC,4BAA4B,CAAC;SAC5C,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;aAClC;YACD,QAAQ,EAAE;gBACN,CAAC,MAAM,EAAE,KAAK,CAAC;gBACf,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,IAAI,EAAE,IAAI,CAAC;gBACZ,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,gIAAuC,CAAC,CAAC;QACjE,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA9CQ,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CA+ClC;IAAD,6BAAC;CAAA;AA/CY,wDAAsB;;;;;;;;;;;;;;ACpBnC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,MAAM,CAAC;QACZ,cAAS,GAAG,aAAa,CAAC;IA0CvC,CAAC;IAxCG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC;YACpF,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;SAC5B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC3D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA5CQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CA6C5B;IAAD,uBAAC;CAAA;AA7CY,4CAAgB;;;;;;;;;;;;;;ACpB7B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAEvC,IAAM,cAAc,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAGvK;IADA;QAGa,OAAE,GAAG,MAAM,CAAC;QACZ,cAAS,GAAG,iBAAiB,CAAC;IAuE3C,CAAC;IArEG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;YAC7F,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC;YACzC,SAAS,EAAE,CAAC,WAAW,EAAE,cAAc,EAAE,eAAe,EAAE,kBAAkB,CAAC;SAChF,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,WAAW,EAAE,gFAAgF;YAE7F,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;aAChC;YAED,QAAQ,EAAE;gBACN,CAAC,MAAM,EAAE,KAAK,CAAC;gBACf,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YAED,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YAED,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YAED,YAAY,EAAE;gBACV;oBACI,UAAU,EAAE,IAAI,MAAM,CAAC,YAAU,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,iDAA8C,EAAE,GAAG,CAAC;oBAC7G,SAAS,EAAE,+BAA+B;oBAC1C,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,EAAE;iBACxE;gBACD;oBACI,UAAU,EAAE,IAAI,MAAM,CAAC,YAAU,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAsC,EAAE,GAAG,CAAC;oBACrG,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE;iBACjE;aACJ;YAED,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;oBACjD,GAAG,EAAE,IAAI,MAAM,CAAC,iCAAiC,CAAC;iBACrD;aACJ;SACJ,CAAC,CAAC;QAEH,IAAM,OAAO,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC3D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAzEQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CA0E5B;IAAD,uBAAC;CAAA;AA1EY,4CAAgB;;;;;;;;;;;;;;ACtB7B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,YAAY,CAAC;IA6CtC,CAAC;IA3CG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,CAAC;YAC5C,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,CAAC;YAC7C,SAAS,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,aAAa,CAAC;SAChE,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;gBAChB,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aAC3B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA/CQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAgD3B;IAAD,sBAAC;CAAA;AAhDY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAEqB,OAAE,GAAG,MAAM,CAAC;QACZ,cAAS,GAAG,aAAa,CAAC;QAC1B,iBAAY,GAAG,mBAAmB,CAAC;IAoDxD,CAAC;IAlDG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE;gBACR,OAAO;gBACP,MAAM;gBACN,QAAQ;aACX;YACD,SAAS,EAAE,+CAA+C;YAC1D,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YACzB,SAAS,EAAE,CAAC,oBAAoB,EAAE,aAAa,CAAC;SACnD,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,qCAAqC;YACrC,WAAW,EAAE,oFAAoF;YACjG,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC1D,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACzD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;aAC1D;SACJ,CAAC,CAAC;QAEH,IAAM,cAAc,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAClE,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,YAAY,EAAE;YAC/C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,cAAc;6BAC1B,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,IAAM,WAAW,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC/D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,WAAW;6BACvB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAtDQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAuD5B;IAAD,uBAAC;CAAA;AAvDY,4CAAgB;;;;;;;;;;;;;;ACpB7B;;;;;;;;;;;;;;kFAckF;AAClF;;;gGAGgG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhG,8GAAuC;AACvC,uJAAsJ;AAItJ;IADA;QAEa,UAAK,GAAG,YAAY,CAAC;QACrB,gBAAW,GAAG,iBAAiB,CAAC;QA+F/B,kBAAa,GAA2C;YAC9D,yJAAyJ;YACzJ,kBAAkB,EAAE;gBAChB,uBAAuB,EAAE,mCAAmC;gBAC5D,uBAAuB,EAAE,mDAAmD;aAC/E;YACD,aAAa,EAAE,sFAAsF;YACrG,cAAc,EAAE;gBACZ;oBACI,gBAAgB;oBAChB,YAAY,EAAE,oCAAoC;oBAClD,WAAW,EAAE,WAAW;oBACxB,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE;iBAC7F;gBACD;oBACI,gBAAgB;oBAChB,YAAY,EAAE,oCAAoC;oBAClD,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;iBACpF;gBACD;oBACI,eAAe;oBACf,YAAY,EAAE,yCAAyC;oBACvD,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;iBACnF;gBACD;oBACI,YAAY;oBACZ,YAAY,EAAE,uBAAuB;oBACrC,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE;iBAChF;gBACD;oBACI,kBAAkB;oBAClB,YAAY,EAAE,8BAA8B;oBAC5C,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE;iBAChF;gBACD;oBACI,YAAY,EAAE,+BAA+B;oBAC7C,WAAW,EAAE,gCAAgC;oBAC7C,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE;iBACnE;aACJ;YACD,UAAU,EAAE;gBACR,aAAa,EAAE,IAAI;gBACnB,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC/B;YACD,UAAU,EAAE;gBACR,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBAC7D,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAClD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBAC7D,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;aACzD;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;aAChC;YACD,SAAS,EAAE;gBACP,SAAS,EAAE;oBACP,OAAO,EAAE,IAAI,MAAM,CAAC,wBAAwB,CAAC;oBAC7C,KAAK,EAAE,IAAI,MAAM,CAAC,2BAA2B,CAAC;iBACjD;aACJ;SACJ,CAAC;IACN,CAAC;IAtKG,yDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAM,OAAO,GAAG,mBAAO,CAAC,gIAAuC,CAAC,CAAC;QACjE,QAAQ,CAAC,4BAA4B,CAAC,WAAW,EAAE;YACzC,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,4BAA4B,CAAC,kBAAkB,EAAE;YAChD,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,OAAO;gCACf,OAAO,EAAE,aAAa;6BACzB,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAK,EAAE;YAC9C,iBAAiB,EAAE;gBACf,aAAa,EAAE,+BAAoB,CAAC,UAAU,CAAC;gBAC/C,gCAAgC,EAAE,+BAAoB,CAAC,UAAU,CAAC;gBAClE,4BAA4B,EAAE,+BAAoB,CAAC,iBAAiB,CAAC;gBACrE,6BAA6B,EAAE,+BAAoB,CAAC,iBAAiB,CAAC;aACzE;YACD,UAAU,EAAE;gBACR,iCAAiC,eAAyB;gBAC1D,sCAAsC,eAAyB;gBAC/D,2BAA2B,eAAyB;gBACpD,sBAAsB,eAAyB;aAClD;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QAEjE,IAAM,UAAU,GAAG,mBAAO,CAAC,wIAA2C,CAAC,CAAC;QACxE,QAAQ,CAAC,4BAA4B,CAAC,YAAY,EAAE;YAC1C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,UAAU;6BACtB,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IAC5E,CAAC;IAES,mDAAkB,GAA5B;QAAA,iBAwCC;QAvCG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,KAAK;YACd,OAAO,EAAE;gBACL,YAAY;gBACZ,YAAY;gBACZ,IAAI;aACP;YACD,UAAU,EAAE;gBACR,KAAK;gBACL,MAAM;gBACN,MAAM;gBACN,MAAM;aACT;YACD,SAAS,EAAE;gBACP,UAAU;aACb;YACD,SAAS,EAAE,cAAc;YACzB,SAAS,EAAE;gBACP,iBAAiB;aACpB;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE;YACpC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,WAAW;YACpB,OAAO,EAAE;gBACL,kBAAkB;gBAClB,KAAK;aACR;YACD,UAAU,EAAE;gBACR,MAAM;aACT;SACJ,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE;YAC1C,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACP,CAAC;IA/FQ,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CA0KlC;IAAD,6BAAC;CAAA;AA1KY,wDAAsB;AA4KnC,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,+tmBA8O/B,KAAC;;;;;;;;;;;;;;;ACnbF;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAEa,qBAAgB,GAAG,MAAM,CAAC;QAC1B,sBAAiB,GAAG,OAAO,CAAC;QAE5B,WAAM,GAA2C;YACtD,UAAU,EAAE;gBACR,aAAa,EAAE,IAAI;gBACnB,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC/B;YACD,UAAU,EAAE;gBACR,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAClD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAClD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAClD,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;gBACpD,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBAC/D,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBAC7D,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;aAChE;SACJ,CAAC;IAoEN,CAAC;IAlEG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,gBAAgB;YACzB,SAAS,EAAE;gBACP,MAAM;gBACN,MAAM;aACT;YACD,YAAY,EAAE;gBACV,OAAO;gBACP,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,WAAW;gBACX,UAAU;gBACV,cAAc;gBACd,SAAS;gBACT,UAAU;aACb;YACD,WAAW,EAAE;gBACT,iBAAiB;gBACjB,YAAY;aACf;YACD,WAAW,EAAE;gBACT,kBAAkB;gBAClB,2BAA2B;aAC9B;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9E,IAAM,WAAW,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC/D,QAAQ,CAAC,4BAA4B,CAAC,aAAa,EAAE;YAC3C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,WAAW;6BACvB,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;QAE9E,QAAQ;QACR,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,iBAAiB;YAC1B,SAAS,EAAE;gBACP,oBAAoB;aACvB;YACD,YAAY,EAAE;gBACV,QAAQ;aACX;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/E,IAAM,YAAY,GAAG,mBAAO,CAAC,sHAAkC,CAAC,CAAC;QACjE,QAAQ,CAAC,4BAA4B,CAAC,sBAAsB,EAAE;YACpD,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,YAAY;6BACxB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,CAAC;IAC5F,CAAC;IAzFQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CA0F5B;IAAD,uBAAC;CAAA;AA1FY,4CAAgB;;;;;;;;;;;;;;ACpB7B;;;;;;;;;;;;;;kFAckF;AAClF;;;gGAGgG;;;;;;;;AAEhG,8GAAuC;AAIvC;IADA;QAEqB,OAAE,GAAG,UAAU,CAAC;QAkBvB,kBAAa,GAA2C;YAC9D,yJAAyJ;YACzJ,aAAa,EAAE,gFAAgF;YAC/F,cAAc,EAAE;gBACZ;oBACI,YAAY,EAAE,IAAI,MAAM,CAAC,YAAU,qBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,mDAAgD,EAAE,GAAG,CAAC;oBACrI,WAAW,EAAE,+BAA+B;oBAC5C,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,EAAE;iBAC1E;gBACD;oBACI,YAAY,EAAE,IAAI,MAAM,CAAC,YAAU,qBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,mDAAgD,EAAE,GAAG,CAAC;oBACrI,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE;iBACnE;gBACD;oBACI,+FAA+F;oBAC/F,8EAA8E;oBAC9E,oDAAoD;oBACpD,YAAY,EAAE,KAAK;oBACnB,WAAW,EAAE,+BAA+B;oBAC5C,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,EAAE;iBAC1E;gBACD;oBACI,YAAY,EAAE,KAAK;oBACnB,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE;iBACnE;aACJ;YACD,UAAU,EAAE;gBACR,cAAc,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;aACjC;YACD,UAAU,EAAE;gBACR,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBAC/D,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAClD,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;aACzD;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;gBAC/B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;aAChC;SACJ,CAAC;IACN,CAAC;4BAvEY,mBAAmB;IAK5B,sDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAES,6CAAe,GAAzB;QAAA,iBAQC;QAPG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;SACd,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE;YACjC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAI,CAAC,EAAE,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;;IAfD,yJAAyJ;IAClJ,kCAAc,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IAH/J,mBAAmB;QAD/B,sBAAU,EAAE;OACA,mBAAmB,CAuE/B;IAAD,0BAAC;CAAA;AAvEY,kDAAmB;;;;;;;;;;;;;;ACxBhC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,MAAM,CAAC;QACZ,cAAS,GAAG,iBAAiB,CAAC;IAqD3C,CAAC;IAnDG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YACzB,SAAS,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC;SAC1C,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,WAAW,EAAE,gDAAgD;YAC7D,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;gBAC1B,WAAW,EAAE,IAAI;aACpB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;aAC5D;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,8CAA8C,CAAC;oBACjE,GAAG,EAAE,IAAI,MAAM,CAAC,sCAAsC,CAAC;iBAC1D;aACJ;SACJ,CAAC,CAAC;QAEH,IAAM,OAAO,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC3D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAvDQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAwD5B;IAAD,uBAAC;CAAA;AAxDY,4CAAgB;;;;;;;;;;;;;;ACpB7B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,UAAU,CAAC;IAmBpC,CAAC;IAjBG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;YAC/B,OAAO,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IArBQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtBY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,YAAY,CAAC;IAgDtC,CAAC;IA9CG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,CAAC;YACpB,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;SAC1B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;aAC/B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,qBAAqB,EAAE,IAAI,MAAM,CAAC,8EAA8E,CAAC;gBACjH,qBAAqB,EAAE,IAAI,MAAM,CAAC,oDAAoD,CAAC;aAC1F;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAlDQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAmD3B;IAAD,sBAAC;CAAA;AAnDY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,UAAU,CAAC;QAChB,cAAS,GAAG,iBAAiB,CAAC;IAoC3C,CAAC;IAlCG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;YACjC,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,SAAS,EAAE;gBACP,UAAU;gBACV,UAAU;gBACV,aAAa;gBACb,eAAe;aAClB;YACD,SAAS,EAAE,sBAAsB;SACpC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;aACnB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC3D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAtCQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAuC5B;IAAD,uBAAC;CAAA;AAvCY,4CAAgB;;;;;;;;;;;;;;ACpB7B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,UAAU,CAAC;QAChB,cAAS,GAAG,oBAAoB,CAAC;IA+C9C,CAAC;IA7CG,uDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;YACzF,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;SACpC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;aAChC;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;aAC/C;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,+BAA+B,CAAC;oBAClD,GAAG,EAAE,IAAI,MAAM,CAAC,kCAAkC,CAAC;iBACtD;aACJ;SACJ,CAAC,CAAC;QAEH,IAAM,OAAO,GAAG,mBAAO,CAAC,4HAAqC,CAAC,CAAC;QAC/D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAjDQ,oBAAoB;QADhC,sBAAU,EAAE;OACA,oBAAoB,CAkDhC;IAAD,2BAAC;CAAA;AAlDY,oDAAoB;;;;;;;;;;;;;;ACpBjC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,aAAa,CAAC;QACnB,cAAS,GAAG,aAAa,CAAC;IA4CvC,CAAC;IA1CG,yDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,OAAO,EAAE,CAAC,aAAa,CAAC;SAC3B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kIAAwC,CAAC,CAAC;QAClE,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA9CQ,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CA+ClC;IAAD,6BAAC;CAAA;AA/CY,wDAAsB;;;;;;;;;;;;;;ACpBnC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,MAAM,CAAC;QACZ,cAAS,GAAG,aAAa,CAAC;QAC1B,WAAM,GAA2C;YACtD,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;aACnB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;SACJ,CAAC;IAuBN,CAAC;IArBG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YACzB,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC;YACxD,SAAS,EAAE,iBAAiB;SAC/B,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhE,IAAM,OAAO,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC3D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAnDQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAoD5B;IAAD,uBAAC;CAAA;AApDY,4CAAgB;;;;;;;;;;;;;;ACpB7B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAA+C;AAC/C,sNAAyG;AAGzG;IADA;QAEa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,YAAY,CAAC;QAKzB,WAAM,GAA2C;YACtD,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5C,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5C,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACzD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;aACnD;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAE5B;YACD,gBAAgB,EAAE;gBACd,qBAAqB,EAAE,IAAI,MAAM,CAAC,uFAAuF,CAAC;gBAC1H,qBAAqB,EAAE,IAAI,MAAM,CAAC,iGAAiG,CAAC;aACvI;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,uBAAuB;oBAC9B,GAAG,EAAE,2BAA2B;iBACnC;aACJ;SACJ,CAAC;IA0CN,CAAC;IAxCG,yDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,YAAY,EAAE;gBACV,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,QAAQ;gBACR,MAAM;aACT;YACD,SAAS,EAAE;gBACP,KAAK;gBACL,KAAK;aACR;YACD,WAAW,EAAE,qBAAqB;YAClC,WAAW,EAAE;gBACT,mBAAmB;aACtB;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhE,IAAM,QAAQ,GAAG,mBAAO,CAAC,gIAAuC,CAAC,CAAC;QAClE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAC3C,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YACnB,MAAM,EAAE,cAAc;SACzB,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC7D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,UAAU;6BACtB,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAhFD;QADC,kBAAM,CAAC,8DAA4B,CAAC;kCACM,8DAA4B;0EAAC;IAL/D,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CAsFlC;IAAD,6BAAC;CAAA;AAtFY,wDAAsB;;;;;;;;;;;;;;ACrBnC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,YAAY,CAAC;QAClB,cAAS,GAAG,mBAAmB,CAAC;IAoD7C,CAAC;IAlDG,yDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;YACxD,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC;YAClD,SAAS,EAAE,sBAAsB;SACpC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;gBAChB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACzD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,iBAAiB,CAAC;oBACpC,GAAG,EAAE,IAAI,MAAM,CAAC,oBAAoB,CAAC;iBACxC;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,gIAAuC,CAAC,CAAC;QACjE,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAtDQ,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CAuDlC;IAAD,6BAAC;CAAA;AAvDY,wDAAsB;;;;;;;;;;;;;;ACpBnC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,MAAM,CAAC;QACZ,cAAS,GAAG,UAAU,CAAC;IA8CpC,CAAC;IA5CG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;YAC7B,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;SACnC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,KAAK;aACrB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE,IAAI;aAChB;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAhDQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAiD3B;IAAD,sBAAC;CAAA;AAjDY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAEa,OAAE,GAAG,QAAQ,CAAC;QACd,WAAM,GAA2C;YACtD,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;aACnB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACzD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;aAC/C;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,2BAA2B,CAAC;oBAC9C,GAAG,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;iBAClD;aACJ;YACD,YAAY,EAAE;gBACV;oBACI,UAAU,EAAE,gFAAgF;oBAC5F,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE;iBACjE;aACJ;SACJ,CAAC;IAiCN,CAAC;IA/BG,qDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,CAAC;YAClF,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC;YACzB,SAAS,EAAE,gCAAgC;SAC9C,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhE,IAAM,eAAe,GAAG,mBAAO,CAAC,kIAAwC,CAAC,CAAC;QAC1E,QAAQ,CAAC,4BAA4B,CAAC,eAAe,EAAE;YAC7C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,eAAe;6BAC3B,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,IAAM,QAAQ,GAAG,mBAAO,CAAC,kIAAwC,CAAC,CAAC;QACnE,QAAQ,CAAC,4BAA4B,CAAC,sBAAsB,EAAE;YACpD,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,QAAQ;6BACpB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;IACtE,CAAC;IArEQ,kBAAkB;QAD9B,sBAAU,EAAE;OACA,kBAAkB,CAsE9B;IAAD,yBAAC;CAAA;AAtEY,gDAAkB;;;;;;;;;;;;;;ACpB/B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,GAAG,CAAC;QACT,cAAS,GAAG,UAAU,CAAC;IAyCpC,CAAC;IAvCG,gDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC;YACnD,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;SACtB,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;aACnB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,8GAA8B,CAAC,CAAC;QACxD,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA3CQ,aAAa;QADzB,sBAAU,EAAE;OACA,aAAa,CA4CzB;IAAD,oBAAC;CAAA;AA5CY,sCAAa;;;;;;;;;;;;;;ACpB1B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,OAAO,CAAC;QACb,cAAS,GAAG,kBAAkB,CAAC;IAiD5C,CAAC;IA/CG,oDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;YAC3B,SAAS,EAAE,CAAC,eAAe,CAAC;SAC/B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;aAChC;YACD,QAAQ,EAAE;gBACN,CAAC,MAAM,EAAE,KAAK,CAAC;gBACf,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,iBAAiB,CAAC;oBACpC,GAAG,EAAE,IAAI,MAAM,CAAC,oBAAoB,CAAC;iBACxC;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,sHAAkC,CAAC,CAAC;QAC5D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAnDQ,iBAAiB;QAD7B,sBAAU,EAAE;OACA,iBAAiB,CAoD7B;IAAD,wBAAC;CAAA;AApDY,8CAAiB;;;;;;;;;;;;;;ACpB9B;;;;;;;;;;;;;;kFAckF;AAClF;;;gGAGgG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhG,8GAAuC;AAIvC;IADA;QAEa,OAAE,GAAG,MAAM,CAAC;QACrB,4IAA4I;QACnI,WAAM,GAA2C;YACtD,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,wBAAwB,CAAC;oBAC3C,GAAG,EAAE,IAAI,MAAM,CAAC,2BAA2B,CAAC;iBAC/C;aACJ;SACJ,CAAC;IAwBN,CAAC;IAtBG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,qIAAqI;YACrI,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;SAC5B,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhE,8IAA8I;QAC9I,IAAM,eAAe,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QACnE,QAAQ,CAAC,4BAA4B,CAAC,aAAa,EAAE;YAC3C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,eAAe;6BAC3B,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;IACpE,CAAC;IAvDQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAwD5B;IAAD,uBAAC;CAAA;AAxDY,4CAAgB;;;;;;;;;;;;;;ACxB7B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,MAAM,CAAC;QACZ,cAAS,GAAG,iBAAiB,CAAC;IAoD3C,CAAC;IAlDG,mDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;SAC5B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,WAAW,EAAE,gDAAgD;YAC7D,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;gBAC1B,WAAW,EAAE,IAAI;aACpB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBACvD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;aAC5D;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,8CAA8C,CAAC;oBACjE,GAAG,EAAE,IAAI,MAAM,CAAC,sCAAsC,CAAC;iBAC1D;aACJ;SACJ,CAAC,CAAC;QAEH,IAAM,OAAO,GAAG,mBAAO,CAAC,oHAAiC,CAAC,CAAC;QAC3D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAtDQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAuD5B;IAAD,uBAAC;CAAA;AAvDY,4CAAgB;;;;;;;;;;;;;;ACpB7B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,WAAW,CAAC;QACjB,cAAS,GAAG,kBAAkB,CAAC;IA0C5C,CAAC;IAxCG,wDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;SACtC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,8HAAsC,CAAC,CAAC;QAChE,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA5CQ,qBAAqB;QADjC,sBAAU,EAAE;OACA,qBAAqB,CA6CjC;IAAD,4BAAC;CAAA;AA7CY,sDAAqB;;;;;;;;;;;;;;ACpBlC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,OAAO,CAAC;QACb,cAAS,GAAG,cAAc,CAAC;IA0CxC,CAAC;IAxCG,oDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;YAC5B,OAAO,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC;SAC3B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,GAAG;aACnB;YACD,QAAQ,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC9C,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;SACJ,CAAC,CAAC;QAEH,IAAM,OAAO,GAAG,mBAAO,CAAC,sHAAkC,CAAC,CAAC;QAC5D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA5CQ,iBAAiB;QAD7B,sBAAU,EAAE;OACA,iBAAiB,CA6C7B;IAAD,wBAAC;CAAA;AA7CY,8CAAiB;;;;;;;;;;;;;;ACpB9B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,YAAY,CAAC;IA6CtC,CAAC;IA3CG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;YAC7B,OAAO,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;aAC9B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IA/CQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAgD3B;IAAD,sBAAC;CAAA;AAhDY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,OAAO,CAAC;QACb,cAAS,GAAG,cAAc,CAAC;IA8CxC,CAAC;IA5CG,oDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;YAC3B,UAAU,EAAE,CAAC,QAAQ,CAAC;SACzB,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC7B;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,sHAAkC,CAAC,CAAC;QAC5D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAhDQ,iBAAiB;QAD7B,sBAAU,EAAE;OACA,iBAAiB,CAiD7B;IAAD,wBAAC;CAAA;AAjDY,8CAAiB;;;;;;;;;;;;;;ACpB9B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,YAAY,CAAC;IAsBtC,CAAC;IApBG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YAC9B,mDAAmD;YACnD,UAAU,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;SAC/B,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,8FAAsB,CAAC,CAAC;QAChD,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;;;oCACsC,qBAAM,KAAK,CAAC,OAAO,CAAC;;gCAAhD,eAAe,GAAa,SAAoB;gCAC1B,qBAAM,eAAe,CAAC,IAAI,EAAE;;gCAAlD,WAAW,GAAW,SAA4B;gCACxD,sBAAO;wCACH,MAAM,EAAE,OAAO;wCACf,OAAO,EAAE,WAAW;qCACvB,EAAC;;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAxBQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAyB3B;IAAD,sBAAC;CAAA;AAzBY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;AAElF,8GAA4C;AAC5C,qHAAwC;AACxC,iIAAgD;AAChD,gJAA0D;AAC1D,8HAA8C;AAC9C,qHAAwC;AACxC,8HAA8C;AAC9C,8HAA8C;AAC9C,0IAAsD;AACtD,wHAA0C;AAC1C,qHAAwC;AACxC,qHAAwC;AACxC,qHAAwC;AACxC,wHAA0C;AAC1C,6IAAuD;AACvD,wHAA0C;AAC1C,0IAAsD;AACtD,qHAAwC;AACxC,+GAAoC;AACpC,2HAA4C;AAC5C,uIAAoD;AACpD,qHAAwC;AACxC,2HAA4C;AAC5C,kHAAsC;AACtC,wHAA0C;AAC1C,wHAA0C;AAC1C,wHAA0C;AAC1C,oIAAkD;AAClD,2HAA4C;AAC5C,qHAAwC;AACxC,qHAAwC;AACxC,qHAAwC;AACxC,wHAA0C;AAC1C,0MAAiH;AACjH,kHAA8C;AAC9C,kHAA8C;AAC9C,oIAAiD;AACjD,8HAA8C;AAC9C,kHAAsC;AACtC,wHAA0C;AAC1C,qHAA+C;AAC/C,qHAAwC;AACxC,wHAA0C;AAE1C,kBAAe,IAAI,2BAAe,CAAC,cAAI;IACnC,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,6BAAmB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACtD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,6BAAmB,CAAC,CAAC;IAE3E,IAAI,CAAC,uCAAwB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC3D,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uCAAwB,CAAC,CAAC;IAEhF,IAAI,CAAC,2BAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,2BAAkB,CAAC,CAAC;IAE1E,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,2BAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,2BAAkB,CAAC,CAAC;IAE1E,IAAI,CAAC,2BAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,2BAAkB,CAAC,CAAC;IAE1E,IAAI,CAAC,mCAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACzD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,mCAAsB,CAAC,CAAC;IAE9E,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,oCAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACzD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,oCAAsB,CAAC,CAAC;IAE9E,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,mCAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACzD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,mCAAsB,CAAC,CAAC;IAE9E,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,iBAAa,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAChD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,iBAAa,CAAC,CAAC;IAErE,IAAI,CAAC,yBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACpD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,yBAAiB,CAAC,CAAC;IAEzE,IAAI,CAAC,iCAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,iCAAqB,CAAC,CAAC;IAE7E,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,yBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACpD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,yBAAiB,CAAC,CAAC;IAEzE,IAAI,CAAC,mBAAc,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACjD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,mBAAc,CAAC,CAAC;IAEtE,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,+BAAoB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACvD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,+BAAoB,CAAC,CAAC;IAE5E,IAAI,CAAC,yBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACpD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,yBAAiB,CAAC,CAAC;IAEzE,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,2BAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACzD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,2BAAsB,CAAC,CAAC;IAE9E,IAAI,CAAC,2BAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACzD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,2BAAsB,CAAC,CAAC;IAE9E,IAAI,CAAC,8BAAmB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACtD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,8BAAmB,CAAC,CAAC;IAE3E,IAAI,CAAC,2BAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,2BAAkB,CAAC,CAAC;IAE1E,IAAI,CAAC,mBAAc,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACjD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,mBAAc,CAAC,CAAC;IAEtE,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;IAExE,IAAI,CAAC,4BAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACzD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,4BAAsB,CAAC,CAAC;IAE9E,IAAI,CAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,qBAAe,CAAC,CAAC;IAEvE,IAAI,CAAC,uBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,6DAAqC,CAAC,CAAC,SAAS,CAAC,uBAAgB,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC;;;;;;;;;;;;;;ACvLH;;;;;;;;;;;;;;kFAckF;AAClF;;;gGAGgG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhG,8GAA+C;AAE/C,sNAAyG;AAGzG;IADA;QAEqB,UAAK,GAAG,YAAY,CAAC;QACrB,gBAAW,GAAG,iBAAiB,CAAC;QAoFvC,kBAAa,GAA2C;YAC9D,yJAAyJ;YACzJ,kBAAkB,EAAE;gBAChB,uBAAuB,EAAE,mCAAmC;gBAC5D,uBAAuB,EAAE,mDAAmD;aAC/E;YACD,aAAa,EAAE,sFAAsF;YACrG,cAAc,EAAE;gBACZ;oBACI,gBAAgB;oBAChB,YAAY,EAAE,oCAAoC;oBAClD,WAAW,EAAE,WAAW;oBACxB,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE;iBAC7F;gBACD;oBACI,gBAAgB;oBAChB,YAAY,EAAE,oCAAoC;oBAClD,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;iBACpF;gBACD;oBACI,eAAe;oBACf,YAAY,EAAE,yCAAyC;oBACvD,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;iBACnF;gBACD;oBACI,YAAY;oBACZ,YAAY,EAAE,uBAAuB;oBACrC,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE;iBAChF;gBACD;oBACI,kBAAkB;oBAClB,YAAY,EAAE,8BAA8B;oBAC5C,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE;iBAChF;gBACD;oBACI,YAAY,EAAE,+BAA+B;oBAC7C,WAAW,EAAE,gCAAgC;oBAC7C,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE;iBACnE;aACJ;YACD,UAAU,EAAE;gBACR,aAAa,EAAE,IAAI;gBACnB,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;aAC/B;YACD,UAAU,EAAE;gBACR,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBAC7D,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAClD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;gBAC7D,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE;aACzD;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC7B,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;aAChC;YACD,SAAS,EAAE;gBACP,SAAS,EAAE;oBACP,OAAO,EAAE,IAAI,MAAM,CAAC,wBAAwB,CAAC;oBAC7C,KAAK,EAAE,IAAI,MAAM,CAAC,2BAA2B,CAAC;iBACjD;aACJ;SACJ,CAAC;IACN,CAAC;IAxJG,yDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAM,OAAO,GAAG,mBAAO,CAAC,gIAAuC,CAAC,CAAC;QACjE,QAAQ,CAAC,4BAA4B,CAAC,WAAW,EAAE;YACzC,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QACjE,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAK,EAAE;YAC9C,UAAU,EAAE;gBACR,iCAAiC,EAAE,CAAC;gBACpC,sCAAsC,EAAE,CAAC;gBACzC,2BAA2B,EAAE,CAAC;gBAC9B,sBAAsB,EAAE,CAAC;aAC5B;SACJ,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,mBAAO,CAAC,wIAA2C,CAAC,CAAC;QACxE,QAAQ,CAAC,4BAA4B,CAAC,YAAY,EAAE;YAC1C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,UAAU;6BACtB,EAAC;;;aACL;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IAC5E,CAAC;IAES,iDAAgB,GAA1B;QACI,IAAM,QAAQ,GAAG,mBAAO,CAAC,4HAAqC,CAAC,CAAC;QAChE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAC3C,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC;YACxC,MAAM,EAAE,qBAAqB;SAChC,CAAC,CAAC;IACP,CAAC;IAES,mDAAkB,GAA5B;QAAA,iBAiCC;QAhCG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,KAAK;YACd,OAAO,EAAE;gBACL,YAAY;gBACZ,YAAY;gBACZ,IAAI;aACP;YACD,UAAU,EAAE;gBACR,KAAK;aACR;YACD,SAAS,EAAE;gBACP,iBAAiB;aACpB;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE;YACpC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,WAAW;YACpB,OAAO,EAAE;gBACL,kBAAkB;gBAClB,KAAK;aACR;YACD,UAAU,EAAE;gBACR,MAAM;aACT;SACJ,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE;YAC1C,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACP,CAAC;IA/ED;QADC,kBAAM,CAAC,8DAA4B,CAAC;kCACM,8DAA4B;0EAAC;IAL/D,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CA+JlC;IAAD,6BAAC;CAAA;AA/JY,wDAAsB;;;;;;;;;;;;;;ACzBnC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,IAAI,CAAC;QACV,cAAS,GAAG,mBAAmB,CAAC;IAiD7C,CAAC;IA/CG,iDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;YAC3C,OAAO,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC;SAClC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,IAAI;aACpB;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;gBACV,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,KAAK,EAAE,IAAI,MAAM,CAAC,iBAAiB,CAAC;oBACpC,GAAG,EAAE,IAAI,MAAM,CAAC,qBAAqB,CAAC;iBACzC;aACJ;SACJ,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,mBAAO,CAAC,gHAA+B,CAAC,CAAC;QACzD,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAnDQ,cAAc;QAD1B,sBAAU,EAAE;OACA,cAAc,CAoD1B;IAAD,qBAAC;CAAA;AApDY,wCAAc;;;;;;;;;;;;;;ACpB3B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,UAAU,CAAC;IAkGpC,CAAC;IAhGG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE;gBACR,MAAM;gBACN,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,OAAO;gBACP,OAAO;gBACP,SAAS;gBACT,MAAM;gBACN,MAAM;gBACN,SAAS;gBACT,cAAc;gBACd,OAAO;gBACP,UAAU;gBACV,MAAM;gBACN,OAAO;gBACP,SAAS;gBACT,OAAO;gBACP,MAAM;gBACN,OAAO;gBACP,MAAM;gBACN,SAAS;gBACT,OAAO;gBACP,OAAO;gBACP,SAAS;gBACT,OAAO;gBACP,MAAM;gBACN,OAAO;gBACP,QAAQ;gBACR,KAAK;gBACL,kBAAkB;gBAClB,SAAS;gBACT,cAAc;gBACd,MAAM;gBACN,MAAM;gBACN,MAAM;gBACN,SAAS;gBACT,aAAa;gBACb,MAAM;gBACN,UAAU;gBACV,MAAM;gBACN,MAAM;gBACN,SAAS;gBACT,cAAc;gBACd,UAAU;gBACV,kBAAkB;gBAClB,OAAO;gBACP,MAAM;gBACN,MAAM;gBACN,MAAM;gBACN,OAAO;gBACP,MAAM;gBACN,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR,OAAO;gBACP,MAAM;gBACN,OAAO;aACV;YACD,SAAS,EAAE,+CAA+C;YAC1D,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;YACvB,SAAS,EAAE,CAAC,UAAU,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,qBAAqB,CAAC;SAC5F,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;aAChC;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;YACD,gBAAgB,EAAE;gBACd,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;gBACzB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;aAC5B;SACJ,CAAC,CAAC;QAEH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IApGQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAqG3B;IAAD,sBAAC;CAAA;AArGY,0CAAe;;;;;;;;;;;;;;ACpB5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,8GAAuC;AAGvC;IADA;QAGa,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,cAAc,CAAC;IAgCxC,CAAC;IA9BG,kDAAwB,GAAxB,UAAyB,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE;gBACR,MAAM;gBACN,OAAO;aACV;YACD,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;SAC1B,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,QAAQ,EAAE;gBACN,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;aAChC;YACD,QAAQ,EAAE;gBACN,CAAC,GAAG,EAAE,GAAG,CAAC;aACb;SACJ,CAAC,CAAC;QAEH,IAAM,OAAO,GAAG,mBAAO,CAAC,kHAAgC,CAAC,CAAC;QAC1D,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5C,oBAAoB,EAA1B;;;wBACI,sBAAO;gCACH,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE,OAAO;6BACnB,EAAC;;;aACL;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAlCQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAmC3B;IAAD,sBAAC;CAAA;AAnCY,0CAAe","file":"19.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './language-client-services';\nexport * from './language-client-factory';\nexport * from './language-client-contribution';\nexport * from './languages-frontend-contribution';\nexport * from './languages-frontend-module';\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './textmate-registry';\nexport * from './textmate-contribution';\nexport * from './monaco-textmate-service';\nexport * from './monaco-textmate-frontend-bindings';\n","module.exports = __webpack_public_path__ + \"b1b07a0660cb1664f670dec2760a5ccb.plist\";","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class BatContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'bat';\n    readonly scopeName = 'source.batchfile';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.bat', '.cmd'],\n            aliases: ['Batch', 'bat']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: 'REM'\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n            ],\n            surroundingPairs: [\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*(::\\\\s*|REM\\\\s+)#region'),\n                    end: new RegExp('^\\\\s*(::\\\\s*|REM\\\\s+)#endregion')\n                }\n            }\n        });\n        const grammar = require('../../data/bat.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ClojureContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'clojure';\n    readonly scopeName = 'source.clojure';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.clj', '.cljs', '.cljc', '.edn'],\n            aliases: ['Clojure', 'clojure']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: ';'\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\\'', close: '\\'' }\n            ],\n            folding: {\n                offSide: true\n            }\n        });\n        const grammar = require('../../data/clojure.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class CoffeescriptContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'coffeescript';\n    readonly scopeName = 'source.coffee';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.coffee', '.litcoffee'],\n            aliases: ['Coffeescript', 'coffeescript']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '#',\n                blockComment: ['###', '###']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            folding: {\n                offSide: true,\n                markers: {\n                    start: new RegExp('^\\\\s*#region\\\\b'),\n                    end: new RegExp('^\\\\s*#endregion\\\\b')\n                }\n            }\n        });\n        const grammar = require('../../data/coffeescript.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class CppContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly C_LANGUAGE_ID = 'c';\n    readonly CPP_LANGUAGE_ID = 'cpp';\n    readonly CPP_LANGUAGE_NAME = 'C/C++';\n\n    readonly config: monaco.languages.LanguageConfiguration = {\n        comments: {\n            lineComment: '//',\n            blockComment: ['/*', '*/'],\n        },\n        brackets: [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        autoClosingPairs: [\n            { open: '[', close: ']' },\n            { open: '{', close: '}' },\n            { open: '(', close: ')' },\n            { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n            { open: '\"', close: '\"', notIn: ['string'] },\n            { open: '/*', close: ' */', notIn: ['string'] }\n        ],\n        surroundingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '\"', close: '\"' },\n            { open: '\\'', close: '\\'' },\n        ],\n        folding: {\n            markers: {\n                start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\n                end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b')\n            }\n        }\n    };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.C_LANGUAGE_ID,\n            extensions: ['.c'],\n            aliases: ['C', 'c']\n        });\n\n        monaco.languages.setLanguageConfiguration(this.C_LANGUAGE_ID, this.config);\n\n        const platformGrammar = require('../../data/platform.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.c.platform', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: platformGrammar\n                };\n            }\n        });\n\n        const cGrammar = require('../../data/c.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.c', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: cGrammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.C_LANGUAGE_ID, 'source.c');\n\n        // cpp\n        monaco.languages.register({\n            id: this.CPP_LANGUAGE_ID,\n            extensions: ['.cpp', '.cc', '.cxx', '.hpp', '.hh', '.hxx', '.h', '.ino', '.inl', '.ipp', 'cl'],\n            aliases: ['C++', 'Cpp', 'cpp'],\n        });\n\n        monaco.languages.setLanguageConfiguration(this.CPP_LANGUAGE_ID, this.config);\n\n        const cppGrammar = require('../../data/cpp.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.cpp', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: cppGrammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.CPP_LANGUAGE_ID, 'source.cpp');\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class CSharpContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'csharp';\n    readonly scopeName = 'source.cs';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.cs'],\n            aliases: ['CSharp', 'C#', 'csharp']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//',\n                blockComment: ['/*', '*/']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n                { open: '/*', close: '*/', notIn: ['string'] }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '<', close: '>' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*#region\\\\b'),\n                    end: new RegExp('^\\\\s*#endregion\\\\b')\n                }\n            }\n        });\n        const grammar = require('../../data/csharp.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class CssContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'css';\n    readonly scopeName = 'source.css';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.css'],\n            aliases: ['CSS', 'css'],\n            mimetypes: ['text/css']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n\n            comments: {\n                blockComment: ['/*', '*/']\n            },\n\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n\n            autoClosingPairs: [\n                { open: '{', close: '}', notIn: ['string', 'comment'] },\n                { open: '[', close: ']', notIn: ['string', 'comment'] },\n                { open: '(', close: ')', notIn: ['string', 'comment'] },\n                { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\n            ],\n\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\n                    end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\n                }\n            }\n        });\n        const grammar = require('../../data/css.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class FSharpContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'fsharp';\n    readonly scopeName = 'source.fsharp';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.fs', '.fsi', '.fsx', '.fsscript'],\n            aliases: ['F#', 'FSharp', 'fsharp']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//',\n                blockComment: ['(*', '*)']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"', notIn: ['string'] }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            folding: {\n                offSide: true,\n                markers: {\n                    'start': new RegExp('^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)'),\n                    'end': new RegExp('^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)')\n                }\n            }\n        });\n        const grammar = require('../../data/fsharp.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class GoContribution implements LanguageGrammarDefinitionContribution {\n    readonly id = 'go';\n    readonly config: monaco.languages.LanguageConfiguration = {\n        comments: {\n            lineComment: '//',\n            blockComment: ['/*', '*/'],\n        },\n        brackets: [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        autoClosingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '`', close: '`', notIn: ['string'] },\n            { open: '\"', close: '\"', notIn: ['string'] },\n            { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        ],\n        surroundingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '`', close: '`' },\n            { open: '\"', close: '\"' },\n            { open: '\\'', close: '\\'' },\n        ],\n        indentationRules: {\n            increaseIndentPattern: new RegExp('^.*(\\\\bcase\\\\b.*:|\\\\bdefault\\\\b:|(\\\\b(func|if|else|switch|select|for|struct)\\\\b.*)?{[^}\"\\'`]*|\\\\([^)\"\\`]*)$'),\n            decreaseIndentPattern: new RegExp('^\\\\s*(\\\\bcase\\\\b.*:|\\\\bdefault\\\\b:|}[)}]*[),]?|\\\\)[,]?)$')\n        }\n    };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.go'],\n            aliases: ['Go', 'go']\n        });\n\n        monaco.languages.setLanguageConfiguration(this.id, this.config);\n\n        const goGrammar = require('../../data/go.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.go', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: goGrammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, 'source.go');\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class GroovyContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'groovy';\n    readonly scopeName = 'source.groovy';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            aliases: ['Groovy', 'groovy'],\n            extensions: ['.groovy', '.gvy', '.gradle'],\n            filenames: ['Jenkinsfile'],\n            firstLine: '^#!.*\\\\bgroovy\\\\b'\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//',\n                blockComment: ['/*', '*/']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ]\n        });\n        const grammar = require('../../data/groovy.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class HandlebarsContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'handlebars';\n    readonly scopeName = 'text.html.handlebars';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.handlebars', '.hbs', '.hjs'],\n            aliases: ['Handlebars', 'handlebars'],\n            mimetypes: ['text/x-handlebars-template']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                blockComment: ['{{!--', '--}}']\n            },\n            brackets: [\n                ['<!--', '-->'],\n                ['<', '>'],\n                ['{{', '}}'],\n                ['{', '}'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '<', close: '>' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ]\n        });\n        const grammar = require('../../data/handlebars.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class HlslContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'hlsl';\n    readonly scopeName = 'source.hlsl';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.hlsl', '.hlsli', '.fx', '.fxh', '.vsh', '.psh', '.cginc', '.compute'],\n            aliases: ['HLSL', 'hlsl']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//',\n                blockComment: ['/*', '*/']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' }\n            ]\n        });\n        const grammar = require('../../data/hlsl.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\nconst EMPTY_ELEMENTS: string[] = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\n\n@injectable()\nexport class HtmlContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'html';\n    readonly scopeName = 'text.html.basic';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.html', '.htm', '.shtml', '.xhtml', '.mdoc', '.jsp', '.asp', '.aspx', '.jshtm'],\n            aliases: ['HTML', 'htm', 'html', 'xhtml'],\n            mimetypes: ['text/html', 'text/x-jshtm', 'text/template', 'text/ng-template'],\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n\n            comments: {\n                blockComment: ['<!--', '-->']\n            },\n\n            brackets: [\n                ['<!--', '-->'],\n                ['<', '>'],\n                ['{', '}'],\n                ['(', ')']\n            ],\n\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n\n            surroundingPairs: [\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '<', close: '>' },\n            ],\n\n            onEnterRules: [\n                {\n                    beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join('|')}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n                    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n                    action: { indentAction: monaco.languages.IndentAction.IndentOutdent }\n                },\n                {\n                    beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join('|')}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n                    action: { indentAction: monaco.languages.IndentAction.Indent }\n                }\n            ],\n\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*<!--\\\\s*#region\\\\b.*-->'),\n                    end: new RegExp('^\\\\s*<!--\\\\s*#endregion\\\\b.*-->')\n                }\n            }\n        });\n\n        const grammar = require('../../data/html.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class IniContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'ini';\n    readonly scopeName = 'source.ini';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.ini', '.properties', '.toml'],\n            aliases: ['INI', 'ini', 'properties', 'toml'],\n            mimetypes: ['text/x-ini', 'text/x-properties', 'text/x-toml'],\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: ';',\n                blockComment: [';', ' ']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ]\n        });\n        const grammar = require('../../data/ini.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class JavaContribution implements LanguageGrammarDefinitionContribution {\n    private readonly id = 'java';\n    private readonly javaScope = 'source.java';\n    private readonly javaDocScope = 'text.html.javadoc';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: [\n                '.java',\n                '.jav',\n                '.class'\n            ],\n            firstLine: '(\\\\<\\\\?xml.*)|(\\\\<svg)|(\\\\<\\\\!doctype\\\\s+svg)',\n            aliases: ['Java', 'java'],\n            mimetypes: ['text/x-java-source', 'text/x-java']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            // the default separators except `@$`\n            wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n            comments: {\n                lineComment: '//',\n                blockComment: ['/*', '*/'],\n            },\n            brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n            autoClosingPairs: [\n                { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n                { open: '{', close: '}', notIn: ['string', 'comment'] },\n                { open: '[', close: ']', notIn: ['string', 'comment'] },\n                { open: '(', close: ')', notIn: ['string', 'comment'] },\n                { open: '<', close: '>', notIn: ['string', 'comment'] },\n            ]\n        });\n\n        const javaDocGrammar = require('../../data/java.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.javaDocScope, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: javaDocGrammar\n                };\n            }\n        });\n        const javaGrammar = require('../../data/java.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.javaScope, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: javaGrammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.javaScope);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { injectable } from 'inversify';\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, getEncodedLanguageId, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { StandardTokenType } from 'vscode-textmate';\n\n@injectable()\nexport class JavascriptContribution implements LanguageGrammarDefinitionContribution {\n    readonly js_id = 'javascript';\n    readonly js_react_id = 'javascriptreact';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        this.registerJavaScript();\n        const grammar = require('../../data/javascript.tmlanguage.json');\n        registry.registerTextmateGrammarScope('source.js', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar,\n                };\n            }\n        });\n\n        registry.registerTextmateGrammarScope('source.js.regexp', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'plist',\n                    content: regExpGrammar,\n                };\n            }\n        });\n\n        registry.registerGrammarConfiguration(this.js_id, {\n            embeddedLanguages: {\n                'meta.tag.js': getEncodedLanguageId('jsx-tags'),\n                'meta.tag.without-attributes.js': getEncodedLanguageId('jsx-tags'),\n                'meta.tag.attributes.js.jsx': getEncodedLanguageId('javascriptreact'),\n                'meta.embedded.expression.js': getEncodedLanguageId('javascriptreact')\n            },\n            tokenTypes: {\n                'entity.name.type.instance.jsdoc': StandardTokenType.Other,\n                'entity.name.function.tagged-template': StandardTokenType.Other,\n                'meta.import string.quoted': StandardTokenType.Other,\n                'variable.other.jsdoc': StandardTokenType.Other\n            }\n        });\n\n        registry.mapLanguageIdToTextmateGrammar(this.js_id, 'source.js');\n\n        const jsxGrammar = require('../../data/javascript.jsx.tmlanguage.json');\n        registry.registerTextmateGrammarScope('source.jsx', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: jsxGrammar,\n                };\n            }\n        });\n\n        registry.mapLanguageIdToTextmateGrammar(this.js_react_id, 'source.jsx');\n    }\n\n    protected registerJavaScript(): void {\n        monaco.languages.register({\n            id: this.js_id,\n            aliases: [\n                'JavaScript',\n                'javascript',\n                'js'\n            ],\n            extensions: [\n                '.js',\n                '.es6',\n                '.mjs',\n                '.pac'\n            ],\n            filenames: [\n                'jakefile'\n            ],\n            firstLine: '^#!.*\\\\bnode',\n            mimetypes: [\n                'text/javascript'\n            ]\n        });\n\n        monaco.languages.onLanguage(this.js_id, () => {\n            monaco.languages.setLanguageConfiguration(this.js_id, this.configuration);\n        });\n\n        monaco.languages.register({\n            id: this.js_react_id,\n            aliases: [\n                'JavaScript React',\n                'jsx'\n            ],\n            extensions: [\n                '.jsx'\n            ]\n        });\n        monaco.languages.onLanguage(this.js_react_id, () => {\n            monaco.languages.setLanguageConfiguration(this.js_react_id, this.configuration);\n        });\n    }\n\n    protected configuration: monaco.languages.LanguageConfiguration = {\n        // copied and modified from https://github.com/microsoft/vscode/blob/master/extensions/typescript-language-features/src/features/languageConfiguration.ts\n        'indentationRules': {\n            'decreaseIndentPattern': /^((?!.*?\\/\\*).*\\*\\/)?\\s*[\\}\\]].*$/,\n            'increaseIndentPattern': /^((?!\\/\\/).)*(\\{[^}\"'`]*|\\([^)\"'`]*|\\[[^\\]\"'`]*)$/\n        },\n        'wordPattern': /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n        'onEnterRules': [\n            {\n                // e.g. /** | */\n                'beforeText': /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n                'afterText': /^\\s*\\*\\/$/,\n                'action': { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' },\n            },\n            {\n                // e.g. /** ...|\n                'beforeText': /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' },\n            },\n            {\n                // e.g.  * ...|\n                'beforeText': /^(\\t|[ ])*[ ]\\*([ ]([^\\*]|\\*(?!\\/))*)?$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, appendText: '* ' },\n            },\n            {\n                // e.g.  */|\n                'beforeText': /^(\\t|[ ])*[ ]\\*\\/\\s*$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, removeText: 1 },\n            },\n            {\n                // e.g.  *-----*/|\n                'beforeText': /^(\\t|[ ])*[ ]\\*[^/]*\\*\\/\\s*$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, removeText: 1 },\n            },\n            {\n                'beforeText': /^\\s*(\\bcase\\s.+:|\\bdefault:)$/,\n                'afterText': /^(?!\\s*(\\bcase\\b|\\bdefault\\b))/,\n                'action': { indentAction: monaco.languages.IndentAction.Indent },\n            }\n        ],\n        'comments': {\n            'lineComment': '//',\n            'blockComment': ['/*', '*/']\n        },\n        'brackets': [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        'autoClosingPairs': [\n            { 'open': '{', 'close': '}' },\n            { 'open': '[', 'close': ']' },\n            { 'open': '(', 'close': ')' },\n            { 'open': \"'\", 'close': \"'\", 'notIn': ['string', 'comment'] },\n            { 'open': '\"', 'close': '\"', 'notIn': ['string'] },\n            { 'open': '`', 'close': '`', 'notIn': ['string', 'comment'] },\n            { 'open': '/**', 'close': ' */', 'notIn': ['string'] }\n        ],\n        'surroundingPairs': [\n            { 'open': '{', 'close': '}' },\n            { 'open': '[', 'close': ']' },\n            { 'open': '(', 'close': ')' },\n            { 'open': \"'\", 'close': \"'\" },\n            { 'open': '\"', 'close': '\"' },\n            { 'open': '`', 'close': '`' }\n        ],\n        'folding': {\n            'markers': {\n                'start': new RegExp('^\\\\s*//\\\\s*#?region\\\\b'),\n                'end': new RegExp('^\\\\s*//\\\\s*#?endregion\\\\b')\n            }\n        }\n    };\n}\n\nconst regExpGrammar = String.raw`\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>fileTypes</key>\n    <array/>\n    <key>hideFromUser</key>\n    <true/>\n    <key>name</key>\n    <string>Regular Expressions (JavaScript)</string>\n    <key>patterns</key>\n    <array>\n        <dict>\n            <key>include</key>\n            <string>#regexp</string>\n        </dict>\n    </array>\n    <key>repository</key>\n    <dict>\n        <key>regex-character-class</key>\n        <dict>\n            <key>patterns</key>\n            <array>\n                <dict>\n                    <key>match</key>\n                    <string>\\\\[wWsSdD]|\\.</string>\n                    <key>name</key>\n                    <string>constant.character.character-class.regexp</string>\n                </dict>\n                <dict>\n                    <key>match</key>\n                    <string>\\\\([0-7]{3}|x\\h\\h|u\\h\\h\\h\\h)</string>\n                    <key>name</key>\n                    <string>constant.character.numeric.regexp</string>\n                </dict>\n                <dict>\n                    <key>match</key>\n                    <string>\\\\c[A-Z]</string>\n                    <key>name</key>\n                    <string>constant.character.control.regexp</string>\n                </dict>\n                <dict>\n                    <key>match</key>\n                    <string>\\\\.</string>\n                    <key>name</key>\n                    <string>constant.character.escape.backslash.regexp</string>\n                </dict>\n            </array>\n        </dict>\n        <key>regexp</key>\n        <dict>\n            <key>patterns</key>\n            <array>\n                <dict>\n                    <key>match</key>\n                    <string>\\\\[bB]|\\^|\\$</string>\n                    <key>name</key>\n                    <string>keyword.control.anchor.regexp</string>\n                </dict>\n                <dict>\n                    <key>match</key>\n                    <string>\\\\[1-9]\\d*</string>\n                    <key>name</key>\n                    <string>keyword.other.back-reference.regexp</string>\n                </dict>\n                <dict>\n                    <key>match</key>\n                    <string>[?+*]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)\\}\\??</string>\n                    <key>name</key>\n                    <string>keyword.operator.quantifier.regexp</string>\n                </dict>\n                <dict>\n                    <key>match</key>\n                    <string>\\|</string>\n                    <key>name</key>\n                    <string>keyword.operator.or.regexp</string>\n                </dict>\n                <dict>\n                    <key>begin</key>\n                    <string>(\\()((\\?=)|(\\?!))</string>\n                    <key>beginCaptures</key>\n                    <dict>\n                        <key>1</key>\n                        <dict>\n                            <key>name</key>\n                            <string>punctuation.definition.group.regexp</string>\n                        </dict>\n                        <key>3</key>\n                        <dict>\n                            <key>name</key>\n                            <string>meta.assertion.look-ahead.regexp</string>\n                        </dict>\n                        <key>4</key>\n                        <dict>\n                            <key>name</key>\n                            <string>meta.assertion.negative-look-ahead.regexp</string>\n                        </dict>\n                    </dict>\n                    <key>end</key>\n                    <string>(\\))</string>\n                    <key>endCaptures</key>\n                    <dict>\n                        <key>1</key>\n                        <dict>\n                            <key>name</key>\n                            <string>punctuation.definition.group.regexp</string>\n                        </dict>\n                    </dict>\n                    <key>name</key>\n                    <string>meta.group.assertion.regexp</string>\n                    <key>patterns</key>\n                    <array>\n                        <dict>\n                            <key>include</key>\n                            <string>#regexp</string>\n                        </dict>\n                    </array>\n                </dict>\n                <dict>\n                    <key>begin</key>\n                    <string>\\((\\?:)?</string>\n                    <key>beginCaptures</key>\n                    <dict>\n                        <key>0</key>\n                        <dict>\n                            <key>name</key>\n                            <string>punctuation.definition.group.regexp</string>\n                        </dict>\n                    </dict>\n                    <key>end</key>\n                    <string>\\)</string>\n                    <key>endCaptures</key>\n                    <dict>\n                        <key>0</key>\n                        <dict>\n                            <key>name</key>\n                            <string>punctuation.definition.group.regexp</string>\n                        </dict>\n                    </dict>\n                    <key>name</key>\n                    <string>meta.group.regexp</string>\n                    <key>patterns</key>\n                    <array>\n                        <dict>\n                            <key>include</key>\n                            <string>#regexp</string>\n                        </dict>\n                    </array>\n                </dict>\n                <dict>\n                    <key>begin</key>\n                    <string>(\\[)(\\^)?</string>\n                    <key>beginCaptures</key>\n                    <dict>\n                        <key>1</key>\n                        <dict>\n                            <key>name</key>\n                            <string>punctuation.definition.character-class.regexp</string>\n                        </dict>\n                        <key>2</key>\n                        <dict>\n                            <key>name</key>\n                            <string>keyword.operator.negation.regexp</string>\n                        </dict>\n                    </dict>\n                    <key>end</key>\n                    <string>(\\])</string>\n                    <key>endCaptures</key>\n                    <dict>\n                        <key>1</key>\n                        <dict>\n                            <key>name</key>\n                            <string>punctuation.definition.character-class.regexp</string>\n                        </dict>\n                    </dict>\n                    <key>name</key>\n                    <string>constant.other.character-class.set.regexp</string>\n                    <key>patterns</key>\n                    <array>\n                        <dict>\n                            <key>captures</key>\n                            <dict>\n                                <key>1</key>\n                                <dict>\n                                    <key>name</key>\n                                    <string>constant.character.numeric.regexp</string>\n                                </dict>\n                                <key>2</key>\n                                <dict>\n                                    <key>name</key>\n                                    <string>constant.character.control.regexp</string>\n                                </dict>\n                                <key>3</key>\n                                <dict>\n                                    <key>name</key>\n                                    <string>constant.character.escape.backslash.regexp</string>\n                                </dict>\n                                <key>4</key>\n                                <dict>\n                                    <key>name</key>\n                                    <string>constant.character.numeric.regexp</string>\n                                </dict>\n                                <key>5</key>\n                                <dict>\n                                    <key>name</key>\n                                    <string>constant.character.control.regexp</string>\n                                </dict>\n                                <key>6</key>\n                                <dict>\n                                    <key>name</key>\n                                    <string>constant.character.escape.backslash.regexp</string>\n                                </dict>\n                            </dict>\n                            <key>match</key>\n                            <string>(?:.|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))\\-(?:[^\\]\\\\]|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))</string>\n                            <key>name</key>\n                            <string>constant.other.character-class.range.regexp</string>\n                        </dict>\n                        <dict>\n                            <key>include</key>\n                            <string>#regex-character-class</string>\n                        </dict>\n                    </array>\n                </dict>\n                <dict>\n                    <key>include</key>\n                    <string>#regex-character-class</string>\n                </dict>\n            </array>\n        </dict>\n    </dict>\n    <key>scopeName</key>\n    <string>source.js.regexp</string>\n    <key>uuid</key>\n    <string>AC8679DE-3AC7-4056-84F9-69A7ADC29DDD</string>\n</dict>\n</plist>\n`;\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class JsonContribution implements LanguageGrammarDefinitionContribution {\n    readonly JSON_LANGUAGE_ID = 'json';\n    readonly JSONC_LANGUAGE_ID = 'jsonc';\n\n    readonly config: monaco.languages.LanguageConfiguration = {\n        'comments': {\n            'lineComment': '//',\n            'blockComment': ['/*', '*/']\n        },\n        'brackets': [\n            ['{', '}'],\n            ['[', ']']\n        ],\n        'autoClosingPairs': [\n            { 'open': '{', 'close': '}', 'notIn': ['string'] },\n            { 'open': '[', 'close': ']', 'notIn': ['string'] },\n            { 'open': '(', 'close': ')', 'notIn': ['string'] },\n            { 'open': '/*', 'close': '*/', 'notIn': ['string'] },\n            { 'open': '\\'', 'close': '\\'', 'notIn': ['string', 'comment'] },\n            { 'open': '`', 'close': '`', 'notIn': ['string', 'comment'] },\n            { 'open': '\"', 'close': '\"', 'notIn': ['string', 'comment'] },\n        ]\n    };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.JSON_LANGUAGE_ID,\n            'aliases': [\n                'JSON',\n                'json'\n            ],\n            'extensions': [\n                '.json',\n                '.bowerrc',\n                '.jshintrc',\n                '.jscsrc',\n                '.eslintrc',\n                '.babelrc',\n                '.webmanifest',\n                '.js.map',\n                '.css.map'\n            ],\n            'filenames': [\n                '.watchmanconfig',\n                '.ember-cli'\n            ],\n            'mimetypes': [\n                'application/json',\n                'application/manifest+json'\n            ]\n        });\n\n        monaco.languages.setLanguageConfiguration(this.JSON_LANGUAGE_ID, this.config);\n\n        const jsonGrammar = require('../../data/json.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.json', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: jsonGrammar\n                };\n            }\n        });\n\n        registry.mapLanguageIdToTextmateGrammar(this.JSON_LANGUAGE_ID, 'source.json');\n\n        // jsonc\n        monaco.languages.register({\n            id: this.JSONC_LANGUAGE_ID,\n            'aliases': [\n                'JSON with Comments'\n            ],\n            'extensions': [\n                '.jsonc'\n            ]\n        });\n\n        monaco.languages.setLanguageConfiguration(this.JSONC_LANGUAGE_ID, this.config);\n\n        const jsoncGrammar = require('../../data/jsonc.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.json.comments', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: jsoncGrammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.JSONC_LANGUAGE_ID, 'source.json.comments');\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { injectable } from 'inversify';\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry } from '@theia/monaco/lib/browser/textmate';\n\n@injectable()\nexport class JsxTagsContribution implements LanguageGrammarDefinitionContribution {\n    private readonly id = 'jsx-tags';\n    // copied and modified from https://github.com/microsoft/vscode/blob/master/extensions/typescript-language-features/src/features/languageConfiguration.ts\n    static EMPTY_ELEMENTS: string[] = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        this.registerJsxTags();\n    }\n\n    protected registerJsxTags(): void {\n        monaco.languages.register({\n            id: this.id\n        });\n\n        monaco.languages.onLanguage(this.id, () => {\n            monaco.languages.setLanguageConfiguration(this.id, this.configuration);\n        });\n    }\n\n    protected configuration: monaco.languages.LanguageConfiguration = {\n        // copied and modified from https://github.com/microsoft/vscode/blob/master/extensions/typescript-language-features/src/features/languageConfiguration.ts\n        'wordPattern': /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n        'onEnterRules': [\n            {\n                'beforeText': new RegExp(`<(?!(?:${JsxTagsContribution.EMPTY_ELEMENTS.join('|')}))([_:\\\\w][_:\\\\w\\\\-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n                'afterText': /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n                'action': { indentAction: monaco.languages.IndentAction.IndentOutdent }\n            },\n            {\n                'beforeText': new RegExp(`<(?!(?:${JsxTagsContribution.EMPTY_ELEMENTS.join('|')}))([_:\\\\w][_:\\\\w\\\\-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n                'action': { indentAction: monaco.languages.IndentAction.Indent }\n            },\n            {\n                // `beforeText` only applies to tokens of a given language. Since we are dealing with jsx-tags,\n                // make sure we apply to the closing `>` of a tag so that mixed language spans\n                // such as `<div onclick={1}>` are handled properly.\n                'beforeText': /^>$/,\n                'afterText': /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n                'action': { indentAction: monaco.languages.IndentAction.IndentOutdent }\n            },\n            {\n                'beforeText': /^>$/,\n                'action': { indentAction: monaco.languages.IndentAction.Indent }\n            },\n        ],\n        'comments': {\n            'blockComment': ['{/*', '*/}']\n        },\n        'brackets': [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')'],\n            ['<', '>']\n        ],\n        'autoClosingPairs': [\n            { 'open': '{', 'close': '}' },\n            { 'open': '[', 'close': ']' },\n            { 'open': '(', 'close': ')' },\n            { 'open': '\\'', 'close': '\\'', 'notIn': ['string', 'comment'] },\n            { 'open': '\"', 'close': '\"', 'notIn': ['string'] },\n            { 'open': '/**', 'close': ' */', 'notIn': ['string'] }\n        ],\n        'surroundingPairs': [\n            { 'open': '{', 'close': '}' },\n            { 'open': '[', 'close': ']' },\n            { 'open': '(', 'close': ')' },\n            { 'open': '<', 'close': '>' },\n            { 'open': '\\'', 'close': '\\'' },\n            { 'open': '\"', 'close': '\"' }\n        ]\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class LessContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'less';\n    readonly scopeName = 'source.css.less';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.less'],\n            aliases: ['Less', 'less'],\n            mimetypes: ['text/x-less', 'text/less'],\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n            comments: {\n                blockComment: ['/*', '*/'],\n                lineComment: '//'\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')'],\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}', notIn: ['string', 'comment'] },\n                { open: '[', close: ']', notIn: ['string', 'comment'] },\n                { open: '(', close: ')', notIn: ['string', 'comment'] },\n                { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' },\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\n                    end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\n                }\n            }\n        });\n\n        const grammar = require('../../data/less.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class LogContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'log';\n    readonly scopeName = 'text.log';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.log', '*.log.?'],\n            aliases: ['log']\n        });\n        const grammar = require('../../data/log.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class LuaContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'lua';\n    readonly scopeName = 'source.lua';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.lua'],\n            aliases: ['Lua', 'lua']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '--',\n                blockComment: ['--[[', ']]']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            indentationRules: {\n                increaseIndentPattern: new RegExp('((\\\\b(else|function|then|do|repeat)\\\\b((?!\\\\b(end|until)\\\\b).)*)|(\\\\{\\\\s*))$'),\n                decreaseIndentPattern: new RegExp('^\\\\s*((\\\\b(elseif|else|end|until)\\\\b)|(\\\\})|(\\\\)))')\n            }\n        });\n        const grammar = require('../../data/lua.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class MakeContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'makefile';\n    readonly scopeName = 'source.makefile';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            aliases: ['Makefile', 'makefile'],\n            extensions: ['.mk'],\n            filenames: [\n                'Makefile',\n                'makefile',\n                'GNUmakefile',\n                'OCamlMakefile'\n            ],\n            firstLine: '^#!\\\\s*/usr/bin/make'\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '#'\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ]\n        });\n        const grammar = require('../../data/make.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class MarkdownContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'markdown';\n    readonly scopeName = 'text.html.markdown';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.md', '.markdown', '.mdown', '.mkdn', '.mkd', '.mdwn', '.mdtxt', '.mdtext'],\n            aliases: ['Markdown', 'markdown']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                blockComment: ['<!--', '-->']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '<', close: '>', notIn: ['string'] }\n            ],\n            surroundingPairs: [\n                { open: '(', close: ')' },\n                { open: '[', close: ']' },\n                { open: '`', close: '`' },\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*<!--\\\\s*#?region\\\\b.*-->'),\n                    end: new RegExp('^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->')\n                }\n            }\n        });\n\n        const grammar = require('../../data/markdown.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ObjectiveCContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'objective-c';\n    readonly scopeName = 'source.objc';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.m'],\n            aliases: ['Objective-C']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//',\n                blockComment: ['/*', '*/']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ]\n        });\n        const grammar = require('../../data/objective-c.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class PerlContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'perl';\n    readonly scopeName = 'source.perl';\n    readonly config: monaco.languages.LanguageConfiguration = {\n        comments: {\n            lineComment: '#'\n        },\n        brackets: [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        autoClosingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '\"', close: '\"' },\n            { open: '\\'', close: '\\'' },\n            { open: '`', close: '`' }\n        ],\n        surroundingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '\"', close: '\"' },\n            { open: '\\'', close: '\\'' },\n            { open: '`', close: '`' }\n        ]\n    };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            aliases: ['Perl', 'perl'],\n            extensions: ['.pl', '.pm', '.pod', '.t', '.PL', '.psgi'],\n            firstLine: '^#!.*\\\\bperl\\\\b'\n        });\n\n        monaco.languages.setLanguageConfiguration(this.id, this.config);\n\n        const grammar = require('../../data/perl.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable, inject } from 'inversify';\nimport { MonacoSnippetSuggestProvider } from '@theia/monaco/lib/browser/monaco-snippet-suggest-provider';\n\n@injectable()\nexport class PhpGrammarContribution implements LanguageGrammarDefinitionContribution {\n    readonly id = 'php';\n    readonly scopeName = 'source.php';\n\n    @inject(MonacoSnippetSuggestProvider)\n    protected readonly snippetSuggestProvider: MonacoSnippetSuggestProvider;\n\n    readonly config: monaco.languages.LanguageConfiguration = {\n        comments: {\n            lineComment: '//', // '#'\n            blockComment: ['/*', '*/']\n        },\n        brackets: [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        autoClosingPairs: [\n            { open: '{', close: '}', notIn: ['string'] },\n            { open: '[', close: ']', notIn: ['string'] },\n            { open: '(', close: ')', notIn: ['string'] },\n            { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n            { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n            { open: '/**', close: ' */', notIn: ['string'] }\n        ],\n        surroundingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '\\'', close: '\\'' },\n            { open: '\"', close: '\"' },\n            { open: '`', close: '`' }\n\n        ],\n        indentationRules: {\n            increaseIndentPattern: new RegExp('({(?!.+}).*|\\\\(|\\\\[|((else(\\\\s)?)?if|else|for(each)?|while|switch).*:)\\\\s*(/[/*].*)?$'),\n            decreaseIndentPattern: new RegExp('^(.*\\\\*\\\\/)?\\\\s*((\\\\})|(\\\\)+[;,])|(\\\\][;,])|\\\\b(else:)|\\\\b((end(if|for(each)?|while|switch));))')\n        },\n        folding: {\n            markers: {\n                start: /\\\\s*(#|\\/\\/)region\\\\b/,\n                end: /^\\\\s*(#|\\/\\/)endregion\\\\b/\n            }\n        }\n    };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            'extensions': [\n                '.php',\n                '.php4',\n                '.php5',\n                '.phtml',\n                '.ctp'\n            ],\n            'aliases': [\n                'PHP',\n                'php'\n            ],\n            'firstLine': '^#!\\\\s*/.*\\\\bphp\\\\b',\n            'mimetypes': [\n                'application/x-php'\n            ]\n        });\n\n        monaco.languages.setLanguageConfiguration(this.id, this.config);\n\n        const snippets = require('../../data/snippets/php.snippets.json');\n        this.snippetSuggestProvider.fromJSON(snippets, {\n            language: [this.id],\n            source: 'PHP Language'\n        });\n\n        const phpGrammar = require('../../data/php.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: phpGrammar\n                };\n            }\n        });\n\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class PowershellContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'powershell';\n    readonly scopeName = 'source.powershell';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.ps1', '.psm1', '.psd1', '.pssc', '.psrc'],\n            aliases: ['PowerShell', 'powershell', 'ps', 'ps1'],\n            firstLine: '^#!\\\\s*/.*\\\\bpwsh\\\\b'\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '#',\n                blockComment: ['<#', '#>']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"', notIn: ['string'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n                { open: '<#', close: '#>' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*#region\\\\b'),\n                    end: new RegExp('^\\\\s*#endregion\\\\b')\n                }\n            }\n        });\n        const grammar = require('../../data/powershell.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class PugContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'jade';\n    readonly scopeName = 'text.pug';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.jade', '.pug'],\n            aliases: ['Pug', 'Jade', 'jade']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//-'\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            folding: {\n                offSide: true\n            }\n        });\n        const grammar = require('../../data/pug.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class PythonContribution implements LanguageGrammarDefinitionContribution {\n    readonly id = 'python';\n    readonly config: monaco.languages.LanguageConfiguration = {\n        comments: {\n            lineComment: '#'\n        },\n        brackets: [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        autoClosingPairs: [\n            { open: '[', close: ']' },\n            { open: '{', close: '}' },\n            { open: '(', close: ')' },\n            { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n            { open: '\"', close: '\"', notIn: ['string'] },\n        ],\n        surroundingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '\"', close: '\"' },\n            { open: '\\'', close: '\\'' },\n        ],\n        folding: {\n            markers: {\n                start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\n                end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b')\n            }\n        },\n        onEnterRules: [\n            {\n                beforeText: /^\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\s*$/,\n                action: { indentAction: monaco.languages.IndentAction.Indent }\n            }\n        ]\n    };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.py', '.rpy', '.pyw', '.cpy', '.gyp', '.gypi', '.snakefile', '.smk'],\n            aliases: ['Python', 'py'],\n            firstLine: '^#!\\\\s*/.*\\\\bpython[0-9.-]*\\\\b',\n        });\n\n        monaco.languages.setLanguageConfiguration(this.id, this.config);\n\n        const platformGrammar = require('../../data/MagicPython.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.python', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: platformGrammar\n                };\n            }\n        });\n\n        const cGrammar = require('../../data/MagicRegExp.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.regexp.python', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: cGrammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, 'source.python');\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class RContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'r';\n    readonly scopeName = 'source.r';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.r', '.rhistory', '.rprofile', '.rt'],\n            aliases: ['R', 'r']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '#'\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' }\n            ]\n        });\n        const grammar = require('../../data/r.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class RazorContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'razor';\n    readonly scopeName = 'text.html.cshtml';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.cshtml'],\n            aliases: ['Razor', 'razor'],\n            mimetypes: ['text/x-cshtml']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                blockComment: ['<!--', '-->']\n            },\n            brackets: [\n                ['<!--', '-->'],\n                ['<', '>'],\n                ['{', '}'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '<', close: '>' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*#region\\\\b'),\n                    end: new RegExp('^\\\\s*#endregion\\\\b')\n                }\n            }\n        });\n        const grammar = require('../../data/razor.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { injectable } from 'inversify';\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\n\n@injectable()\nexport class RustContribution implements LanguageGrammarDefinitionContribution {\n    readonly id = 'rust';\n    // copied from https://github.com/Microsoft/vscode/blob/9e1975d98598ef268ca760b8381ee628f27fc121/extensions/rust/language-configuration.json\n    readonly config: monaco.languages.LanguageConfiguration = {\n        comments: {\n            lineComment: '//',\n            blockComment: ['/*', '*/']\n        },\n        brackets: [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        autoClosingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '\\\"', close: '\\\"' }\n        ],\n        surroundingPairs: [\n            { open: '{', close: '}' },\n            { open: '[', close: ']' },\n            { open: '(', close: ')' },\n            { open: '\\\"', close: '\\\"' },\n            { open: \"'\", close: \"'\" }\n        ],\n        folding: {\n            markers: {\n                start: new RegExp('^\\\\s*//\\\\s*#?region\\\\b'),\n                end: new RegExp('^\\\\s*//\\\\s*#?endregion\\\\b')\n            }\n        }\n    };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            // copied from https://github.com/Microsoft/vscode/blob/9e1975d98598ef268ca760b8381ee628f27fc121/extensions/rust/package.json#L12-L17\n            id: this.id,\n            extensions: ['.rs'],\n            aliases: ['Rust', 'rust']\n        });\n\n        monaco.languages.setLanguageConfiguration(this.id, this.config);\n\n        // copied from https://github.com/Microsoft/vscode/blob/9e1975d98598ef268ca760b8381ee628f27fc121/extensions/rust/syntaxes/rust.tmLanguage.json\n        const platformGrammar = require('../../data/rust.tmLanguage.json');\n        registry.registerTextmateGrammarScope('source.rust', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: platformGrammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, 'source.rust');\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ScssContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'scss';\n    readonly scopeName = 'source.css.scss';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.scss'],\n            aliases: ['Scss', 'scss']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n            comments: {\n                blockComment: ['/*', '*/'],\n                lineComment: '//'\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')'],\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}', notIn: ['string', 'comment'] },\n                { open: '[', close: ']', notIn: ['string', 'comment'] },\n                { open: '(', close: ')', notIn: ['string', 'comment'] },\n                { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' },\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\n                    end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\n                }\n            }\n        });\n\n        const grammar = require('../../data/scss.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ShaderlabContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'shaderlab';\n    readonly scopeName = 'source.shaderlab';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.shader'],\n            aliases: ['ShaderLab', 'shaderlab']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//',\n                blockComment: ['/*', '*/']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' }\n            ]\n        });\n        const grammar = require('../../data/shaderlab.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ShellContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'shell';\n    readonly scopeName = 'source.shell';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.sh', '.bash'],\n            aliases: ['Shell', 'sh']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '#',\n            },\n            brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '`', close: '`' },\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '`', close: '`' },\n            ],\n        });\n\n        const grammar = require('../../data/shell.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class SqlContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'sql';\n    readonly scopeName = 'source.sql';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.sql', '.dsql'],\n            aliases: ['SQL']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '--',\n                blockComment: ['/*', '*/']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '`', close: '`' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ]\n        });\n        const grammar = require('../../data/sql.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class SwiftContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'swift';\n    readonly scopeName = 'source.swift';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            aliases: ['Swift', 'swift'],\n            extensions: ['.swift']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '//',\n                blockComment: ['/*', '*/']\n            },\n            brackets: [\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '`', close: '`' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '`', close: '`' }\n            ]\n        });\n        const grammar = require('../../data/swift.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class TclContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'tcl';\n    readonly scopeName = 'source.tcl';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            aliases: ['TCL', 'tcl', 'Tcl'],\n            // .exp are Expect files, which are written in TCL.\n            extensions: ['.tcl', '.exp'],\n        });\n        const grammar = require('../../data/Tcl.plist');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                const grammarResponse: Response = await fetch(grammar);\n                const grammarText: string = await grammarResponse.text();\n                return {\n                    format: 'plist',\n                    content: grammarText,\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { BatContribution } from './bat';\nimport { ClojureContribution } from './clojure';\nimport { CoffeescriptContribution } from './coffeescript';\nimport { CSharpContribution } from './csharp';\nimport { CssContribution } from './css';\nimport { FSharpContribution } from './fsharp';\nimport { GroovyContribution } from './groovy';\nimport { HandlebarsContribution } from './handlebars';\nimport { HlslContribution } from './hlsl';\nimport { IniContribution } from './ini';\nimport { LogContribution } from './log';\nimport { LuaContribution } from './lua';\nimport { MakeContribution } from './make';\nimport { ObjectiveCContribution } from './objective-c';\nimport { PerlContribution } from './perl';\nimport { PowershellContribution } from './powershell';\nimport { PugContribution } from './pug';\nimport { RContribution } from './r';\nimport { RazorContribution } from './razor';\nimport { ShaderlabContribution } from './shaderlab';\nimport { SqlContribution } from './sql';\nimport { SwiftContribution } from './swift';\nimport { VbContribution } from './vb';\nimport { HtmlContribution } from './html';\nimport { LessContribution } from './less';\nimport { ScssContribution } from './scss';\nimport { MarkdownContribution } from './markdown';\nimport { ShellContribution } from './shell';\nimport { TclContribution } from './tcl';\nimport { XmlContribution } from './xml';\nimport { XslContribution } from './xsl';\nimport { JavaContribution } from './java';\nimport { LanguageGrammarDefinitionContribution } from '@theia/monaco/lib/browser/textmate/textmate-contribution';\nimport { TypescriptContribution } from './ts';\nimport { JavascriptContribution } from './js';\nimport { JsxTagsContribution } from './jsx-tags';\nimport { PythonContribution } from './python';\nimport { GoContribution } from './go';\nimport { RustContribution } from './rust';\nimport { PhpGrammarContribution } from './php';\nimport { CppContribution } from './cpp';\nimport { JsonContribution } from './json';\n\nexport default new ContainerModule(bind => {\n    bind(BatContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(BatContribution);\n\n    bind(ClojureContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(ClojureContribution);\n\n    bind(CoffeescriptContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(CoffeescriptContribution);\n\n    bind(CSharpContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(CSharpContribution);\n\n    bind(CssContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(CssContribution);\n\n    bind(FSharpContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(FSharpContribution);\n\n    bind(GroovyContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(GroovyContribution);\n\n    bind(HandlebarsContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(HandlebarsContribution);\n\n    bind(HlslContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(HlslContribution);\n\n    bind(IniContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(IniContribution);\n\n    bind(LogContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(LogContribution);\n\n    bind(LuaContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(LuaContribution);\n\n    bind(MakeContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(MakeContribution);\n\n    bind(ObjectiveCContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(ObjectiveCContribution);\n\n    bind(PerlContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(PerlContribution);\n\n    bind(PowershellContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(PowershellContribution);\n\n    bind(PugContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(PugContribution);\n\n    bind(RContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(RContribution);\n\n    bind(RazorContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(RazorContribution);\n\n    bind(ShaderlabContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(ShaderlabContribution);\n\n    bind(SqlContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(SqlContribution);\n\n    bind(SwiftContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(SwiftContribution);\n\n    bind(VbContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(VbContribution);\n\n    bind(HtmlContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(HtmlContribution);\n\n    bind(LessContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(LessContribution);\n\n    bind(ScssContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(ScssContribution);\n\n    bind(MarkdownContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(MarkdownContribution);\n\n    bind(ShellContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(ShellContribution);\n\n    bind(TclContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(TclContribution);\n\n    bind(XmlContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(XmlContribution);\n\n    bind(XslContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(XslContribution);\n\n    bind(JavaContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(JavaContribution);\n\n    bind(TypescriptContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(TypescriptContribution);\n\n    bind(JavascriptContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(JavascriptContribution);\n\n    bind(JsxTagsContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(JsxTagsContribution);\n\n    bind(PythonContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(PythonContribution);\n\n    bind(GoContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(GoContribution);\n\n    bind(RustContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(RustContribution);\n\n    bind(PhpGrammarContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(PhpGrammarContribution);\n\n    bind(CppContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(CppContribution);\n\n    bind(JsonContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(JsonContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { injectable, inject } from 'inversify';\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { MonacoSnippetSuggestProvider } from '@theia/monaco/lib/browser/monaco-snippet-suggest-provider';\n\n@injectable()\nexport class TypescriptContribution implements LanguageGrammarDefinitionContribution {\n    private readonly ts_id = 'typescript';\n    private readonly ts_react_id = 'typescriptreact';\n\n    @inject(MonacoSnippetSuggestProvider)\n    protected readonly snippetSuggestProvider: MonacoSnippetSuggestProvider;\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        this.registerTypeScript();\n        this.registerSnippets();\n        const grammar = require('../../data/typescript.tmlanguage.json');\n        registry.registerTextmateGrammarScope('source.ts', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar,\n                };\n            }\n        });\n\n        registry.mapLanguageIdToTextmateGrammar(this.ts_id, 'source.ts');\n        registry.registerGrammarConfiguration(this.ts_id, {\n            tokenTypes: {\n                'entity.name.type.instance.jsdoc': 0,\n                'entity.name.function.tagged-template': 0,\n                'meta.import string.quoted': 0,\n                'variable.other.jsdoc': 0\n            }\n        });\n\n        const jsxGrammar = require('../../data/typescript.tsx.tmlanguage.json');\n        registry.registerTextmateGrammarScope('source.tsx', {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: jsxGrammar,\n                };\n            }\n        });\n\n        registry.mapLanguageIdToTextmateGrammar(this.ts_react_id, 'source.tsx');\n    }\n\n    protected registerSnippets(): void {\n        const snippets = require('../../data/snippets/typescript.json');\n        this.snippetSuggestProvider.fromJSON(snippets, {\n            language: [this.ts_id, this.ts_react_id],\n            source: 'TypeScript Language'\n        });\n    }\n\n    protected registerTypeScript(): void {\n        monaco.languages.register({\n            id: this.ts_id,\n            aliases: [\n                'TypeScript',\n                'typescript',\n                'ts'\n            ],\n            extensions: [\n                '.ts'\n            ],\n            mimetypes: [\n                'text/typescript'\n            ]\n        });\n\n        monaco.languages.onLanguage(this.ts_id, () => {\n            monaco.languages.setLanguageConfiguration(this.ts_id, this.configuration);\n        });\n\n        monaco.languages.register({\n            id: this.ts_react_id,\n            aliases: [\n                'TypeScript React',\n                'tsx'\n            ],\n            extensions: [\n                '.tsx'\n            ]\n        });\n        monaco.languages.onLanguage(this.ts_react_id, () => {\n            monaco.languages.setLanguageConfiguration(this.ts_react_id, this.configuration);\n        });\n    }\n\n    protected configuration: monaco.languages.LanguageConfiguration = {\n        // copied and modified from https://github.com/microsoft/vscode/blob/master/extensions/typescript-language-features/src/features/languageConfiguration.ts\n        'indentationRules': {\n            'decreaseIndentPattern': /^((?!.*?\\/\\*).*\\*\\/)?\\s*[\\}\\]].*$/,\n            'increaseIndentPattern': /^((?!\\/\\/).)*(\\{[^}\"'`]*|\\([^)\"'`]*|\\[[^\\]\"'`]*)$/\n        },\n        'wordPattern': /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n        'onEnterRules': [\n            {\n                // e.g. /** | */\n                'beforeText': /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n                'afterText': /^\\s*\\*\\/$/,\n                'action': { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' },\n            },\n            {\n                // e.g. /** ...|\n                'beforeText': /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' },\n            },\n            {\n                // e.g.  * ...|\n                'beforeText': /^(\\t|[ ])*[ ]\\*([ ]([^\\*]|\\*(?!\\/))*)?$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, appendText: '* ' },\n            },\n            {\n                // e.g.  */|\n                'beforeText': /^(\\t|[ ])*[ ]\\*\\/\\s*$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, removeText: 1 },\n            },\n            {\n                // e.g.  *-----*/|\n                'beforeText': /^(\\t|[ ])*[ ]\\*[^/]*\\*\\/\\s*$/,\n                'action': { indentAction: monaco.languages.IndentAction.None, removeText: 1 },\n            },\n            {\n                'beforeText': /^\\s*(\\bcase\\s.+:|\\bdefault:)$/,\n                'afterText': /^(?!\\s*(\\bcase\\b|\\bdefault\\b))/,\n                'action': { indentAction: monaco.languages.IndentAction.Indent },\n            }\n        ],\n        'comments': {\n            'lineComment': '//',\n            'blockComment': ['/*', '*/']\n        },\n        'brackets': [\n            ['{', '}'],\n            ['[', ']'],\n            ['(', ')']\n        ],\n        'autoClosingPairs': [\n            { 'open': '{', 'close': '}' },\n            { 'open': '[', 'close': ']' },\n            { 'open': '(', 'close': ')' },\n            { 'open': \"'\", 'close': \"'\", 'notIn': ['string', 'comment'] },\n            { 'open': '\"', 'close': '\"', 'notIn': ['string'] },\n            { 'open': '`', 'close': '`', 'notIn': ['string', 'comment'] },\n            { 'open': '/**', 'close': ' */', 'notIn': ['string'] }\n        ],\n        'surroundingPairs': [\n            { 'open': '{', 'close': '}' },\n            { 'open': '[', 'close': ']' },\n            { 'open': '(', 'close': ')' },\n            { 'open': \"'\", 'close': \"'\" },\n            { 'open': '\"', 'close': '\"' },\n            { 'open': '`', 'close': '`' }\n        ],\n        'folding': {\n            'markers': {\n                'start': new RegExp('^\\\\s*//\\\\s*#?region\\\\b'),\n                'end': new RegExp('^\\\\s*//\\\\s*#?endregion\\\\b')\n            }\n        }\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class VbContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'vb';\n    readonly scopeName = 'source.asp.vb.net';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: ['.vb', '.brs', '.vbs', '.bas'],\n            aliases: ['Visual Basic', 'vb']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '\\''\n            },\n            brackets: [\n                ['<', '>'],\n                ['{', '}'],\n                ['[', ']'],\n                ['(', ')']\n            ],\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' }\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '<', close: '>' },\n                { open: '\"', close: '\"' }\n            ],\n            folding: {\n                markers: {\n                    start: new RegExp('^\\\\s*#Region\\\\b'),\n                    end: new RegExp('^\\\\s*#End Region\\\\b')\n                }\n            }\n        });\n        const grammar = require('../../data/vb.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class XmlContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'xml';\n    readonly scopeName = 'text.xml';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: [\n                '.xml',\n                '.xsd',\n                '.ascx',\n                '.atom',\n                '.axml',\n                '.bpmn',\n                '.config',\n                '.cpt',\n                '.csl',\n                '.csproj',\n                '.csproj.user',\n                '.dita',\n                '.ditamap',\n                '.dtd',\n                '.dtml',\n                '.fsproj',\n                '.fxml',\n                '.iml',\n                '.isml',\n                '.jmx',\n                '.launch',\n                '.menu',\n                '.mxml',\n                '.nuspec',\n                '.opml',\n                '.owl',\n                '.proj',\n                '.props',\n                '.pt',\n                '.publishsettings',\n                '.pubxml',\n                '.pubxml.user',\n                '.rdf',\n                '.rng',\n                '.rss',\n                '.shproj',\n                '.storyboard',\n                '.svg',\n                '.targets',\n                '.tld',\n                '.tmx',\n                '.vbproj',\n                '.vbproj.user',\n                '.vcxproj',\n                '.vcxproj.filters',\n                '.wsdl',\n                '.wxi',\n                '.wxl',\n                '.wxs',\n                '.xaml',\n                '.xbl',\n                '.xib',\n                '.xlf',\n                '.xliff',\n                '.xpdl',\n                '.xul',\n                '.xoml'\n            ],\n            firstLine: '(\\\\<\\\\?xml.*)|(\\\\<svg)|(\\\\<\\\\!doctype\\\\s+svg)',\n            aliases: ['XML', 'xml'],\n            mimetypes: ['text/xml', 'application/xml', 'application/xaml+xml', 'application/xml-dtd']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                blockComment: ['<!--', '-->'],\n            },\n            brackets: [\n                ['<', '>']\n            ],\n            autoClosingPairs: [\n                { open: '<', close: '>' },\n                { open: '\\'', close: '\\'' },\n                { open: '\"', close: '\"' },\n            ],\n            surroundingPairs: [\n                { open: '<', close: '>' },\n                { open: '\\'', close: '\\'' },\n                { open: '\"', close: '\"' },\n            ]\n        });\n\n        const grammar = require('../../data/xml.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LanguageGrammarDefinitionContribution, TextmateRegistry, GrammarDefinition } from '@theia/monaco/lib/browser/textmate';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class XslContribution implements LanguageGrammarDefinitionContribution {\n\n    readonly id = 'xsl';\n    readonly scopeName = 'text.xml.xsl';\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: this.id,\n            extensions: [\n                '.xsl',\n                '.xslt'\n            ],\n            aliases: ['XSL', 'xsl']\n        });\n        monaco.languages.setLanguageConfiguration(this.id, {\n            comments: {\n                lineComment: '',\n                blockComment: ['<!--', '-->']\n            },\n            brackets: [\n                ['<', '>']\n            ]\n        });\n\n        const grammar = require('../../data/xsl.tmLanguage.json');\n        registry.registerTextmateGrammarScope(this.scopeName, {\n            async getGrammarDefinition(): Promise<GrammarDefinition> {\n                return {\n                    format: 'json',\n                    content: grammar\n                };\n            }\n        });\n        registry.mapLanguageIdToTextmateGrammar(this.id, this.scopeName);\n    }\n}\n"],"sourceRoot":""}